-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Frontend/Signe/Par.y
-----------------------------------------------------------------------------

state 39 contains 1 shift/reduce conflicts.
state 98 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pListToplevel -> ListToplevel               (1)
	%start_pToplevel -> Toplevel                       (2)
	%start_pListPattern -> ListPattern                 (3)
	%start_pExpr3 -> Expr3                             (4)
	%start_pExpr2 -> Expr2                             (5)
	%start_pExpr1 -> Expr1                             (6)
	%start_pExpr -> Expr                               (7)
	%start_pListExpr -> ListExpr                       (8)
	%start_pLet -> Let                                 (9)
	%start_pListLet -> ListLet                         (10)
	%start_pComplex2 -> Complex2                       (11)
	%start_pComplex1 -> Complex1                       (12)
	%start_pComplex -> Complex                         (13)
	%start_pPattern -> Pattern                         (14)
	%start_pMono2 -> Mono2                             (15)
	%start_pMono1 -> Mono1                             (16)
	%start_pMono -> Mono                               (17)
	%start_pType -> Type                               (18)
	%start_pListId -> ListId                           (19)
	Id -> L_Id                                         (20)
	Scalar -> L_Scalar                                 (21)
	Program -> ListToplevel                            (22)
	ListToplevel ->                                    (23)
	ListToplevel -> Toplevel ';' ListToplevel          (24)
	Toplevel -> Id ListPattern ':=' Expr               (25)
	Toplevel -> Id ListPattern ':' Type ':=' Expr      (26)
	ListPattern ->                                     (27)
	ListPattern -> Pattern ListPattern                 (28)
	Expr3 -> Id                                        (29)
	Expr3 -> '~1'                                      (30)
	Expr3 -> '~0'                                      (31)
	Expr3 -> '~+'                                      (32)
	Expr3 -> '~-'                                      (33)
	Expr3 -> '~i'                                      (34)
	Expr3 -> '~j'                                      (35)
	Expr3 -> '(' ListExpr ')'                          (36)
	Expr3 -> Complex '*' Expr3                         (37)
	Expr3 -> '(' Expr ')'                              (38)
	Expr2 -> Expr2 Expr3                               (39)
	Expr2 -> Expr3                                     (40)
	Expr1 -> Expr2 '+' Expr1                           (41)
	Expr1 -> Expr2 '-' Expr1                           (42)
	Expr1 -> 'if°' Expr 'then' Expr 'else' Expr        (43)
	Expr1 -> 'if*' Expr 'then' Expr 'else' Expr        (44)
	Expr1 -> 'if' Expr 'then' Expr 'else' Expr         (45)
	Expr1 -> 'let' '{' ListLet '}' 'in' Expr           (46)
	Expr1 -> 'λ' ListId '.' Expr                       (47)
	Expr1 -> '\\' ListId '.' Expr                      (48)
	Expr1 -> Expr2                                     (49)
	Expr -> Expr1                                      (50)
	ListExpr ->                                        (51)
	ListExpr -> Expr                                   (52)
	ListExpr -> Expr ',' ListExpr                      (53)
	Let -> Pattern '=' Expr                            (54)
	ListLet -> Let                                     (55)
	ListLet -> Let ';' ListLet                         (56)
	Complex2 -> Scalar '+' Scalar 'i'                  (57)
	Complex2 -> Scalar '-' Scalar 'i'                  (58)
	Complex2 -> Scalar                                 (59)
	Complex2 -> Scalar 'i'                             (60)
	Complex2 -> '-i'                                   (61)
	Complex2 -> 'i'                                    (62)
	Complex2 -> 'π'                                    (63)
	Complex2 -> 'pi'                                   (64)
	Complex2 -> 'e'                                    (65)
	Complex2 -> '(' Complex ')'                        (66)
	Complex1 -> Complex2 '^' Complex1                  (67)
	Complex1 -> Complex2 '/' Complex1                  (68)
	Complex1 -> Complex2 Complex1                      (69)
	Complex1 -> Complex2                               (70)
	Complex -> Complex1                                (71)
	Pattern -> Id                                      (72)
	Pattern -> '(' Id ',' Id ')'                       (73)
	Mono2 -> Id                                        (74)
	Mono2 -> 'qubit'                                   (75)
	Mono2 -> '(' Mono ')'                              (76)
	Mono1 -> Mono2 '*' Mono1                           (77)
	Mono1 -> Mono2 '->' Mono1                          (78)
	Mono1 -> Mono2                                     (79)
	Mono -> Mono1                                      (80)
	Type -> Mono                                       (81)
	Type -> '∀' ListId '.' Mono                        (82)
	Type -> 'forall' ListId '.' Mono                   (83)
	ListId -> Id                                       (84)
	ListId -> Id ListId                                (85)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'*'            { PT _ (TS _ 3) }
	'+'            { PT _ (TS _ 4) }
	','            { PT _ (TS _ 5) }
	'-'            { PT _ (TS _ 6) }
	'->'           { PT _ (TS _ 7) }
	'-i'           { PT _ (TS _ 8) }
	'.'            { PT _ (TS _ 9) }
	'/'            { PT _ (TS _ 10) }
	':'            { PT _ (TS _ 11) }
	':='           { PT _ (TS _ 12) }
	';'            { PT _ (TS _ 13) }
	'='            { PT _ (TS _ 14) }
	'\\'           { PT _ (TS _ 15) }
	'^'            { PT _ (TS _ 16) }
	'e'            { PT _ (TS _ 17) }
	'else'         { PT _ (TS _ 18) }
	'forall'       { PT _ (TS _ 19) }
	'i'            { PT _ (TS _ 20) }
	'if'           { PT _ (TS _ 21) }
	'if*'          { PT _ (TS _ 22) }
	'if°'          { PT _ (TS _ 23) }
	'in'           { PT _ (TS _ 24) }
	'let'          { PT _ (TS _ 25) }
	'pi'           { PT _ (TS _ 26) }
	'qubit'        { PT _ (TS _ 27) }
	'then'         { PT _ (TS _ 28) }
	'{'            { PT _ (TS _ 29) }
	'}'            { PT _ (TS _ 30) }
	'~+'           { PT _ (TS _ 31) }
	'~-'           { PT _ (TS _ 32) }
	'~0'           { PT _ (TS _ 33) }
	'~1'           { PT _ (TS _ 34) }
	'~i'           { PT _ (TS _ 35) }
	'~j'           { PT _ (TS _ 36) }
	'λ'            { PT _ (TS _ 37) }
	'π'            { PT _ (TS _ 38) }
	'∀'            { PT _ (TS _ 39) }
	L_Id           { PT _ (T_Id _) }
	L_Scalar       { PT _ (T_Scalar $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pListToplevel rule  1
	%start_pToplevel rule  2
	%start_pListPattern rule  3
	%start_pExpr3   rule  4
	%start_pExpr2   rule  5
	%start_pExpr1   rule  6
	%start_pExpr    rule  7
	%start_pListExpr rule  8
	%start_pLet     rule  9
	%start_pListLet rule  10
	%start_pComplex2 rule  11
	%start_pComplex1 rule  12
	%start_pComplex rule  13
	%start_pPattern rule  14
	%start_pMono2   rule  15
	%start_pMono1   rule  16
	%start_pMono    rule  17
	%start_pType    rule  18
	%start_pListId  rule  19
	Id              rule  20
	Scalar          rule  21
	Program         rule  22
	ListToplevel    rules 23, 24
	Toplevel        rules 25, 26
	ListPattern     rules 27, 28
	Expr3           rules 29, 30, 31, 32, 33, 34, 35, 36, 37, 38
	Expr2           rules 39, 40
	Expr1           rules 41, 42, 43, 44, 45, 46, 47, 48, 49
	Expr            rule  50
	ListExpr        rules 51, 52, 53
	Let             rule  54
	ListLet         rules 55, 56
	Complex2        rules 57, 58, 59, 60, 61, 62, 63, 64, 65, 66
	Complex1        rules 67, 68, 69, 70
	Complex         rule  71
	Pattern         rules 72, 73
	Mono2           rules 74, 75, 76
	Mono1           rules 77, 78, 79
	Mono            rule  80
	Type            rules 81, 82, 83
	ListId          rules 84, 85

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	L_Id           shift, and enter state 21
	%eof           reduce using rule 23

	Id             goto state 82
	Program        goto state 86
	ListToplevel   goto state 87
	Toplevel       goto state 85

State 1

	%start_pListToplevel -> . ListToplevel              (rule 1)

	L_Id           shift, and enter state 21
	%eof           reduce using rule 23

	Id             goto state 82
	ListToplevel   goto state 84
	Toplevel       goto state 85

State 2

	%start_pToplevel -> . Toplevel                      (rule 2)

	L_Id           shift, and enter state 21

	Id             goto state 82
	Toplevel       goto state 83

State 3

	%start_pListPattern -> . ListPattern                (rule 3)

	'('            shift, and enter state 38
	L_Id           shift, and enter state 21
	%eof           reduce using rule 27

	Id             goto state 36
	ListPattern    goto state 80
	Pattern        goto state 81

State 4

	%start_pExpr3 -> . Expr3                            (rule 4)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 79
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 5

	%start_pExpr2 -> . Expr2                            (rule 5)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 78
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 6

	%start_pExpr1 -> . Expr1                            (rule 6)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 77
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 7

	%start_pExpr -> . Expr                              (rule 7)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 76
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 8

	%start_pListExpr -> . ListExpr                      (rule 8)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49
	%eof           reduce using rule 51

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 60
	ListExpr       goto state 61
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 9

	%start_pLet -> . Let                                (rule 9)

	'('            shift, and enter state 38
	L_Id           shift, and enter state 21

	Id             goto state 36
	Let            goto state 55
	Pattern        goto state 54

State 10

	%start_pListLet -> . ListLet                        (rule 10)

	'('            shift, and enter state 38
	L_Id           shift, and enter state 21

	Id             goto state 36
	Let            goto state 52
	ListLet        goto state 53
	Pattern        goto state 54

State 11

	%start_pComplex2 -> . Complex2                      (rule 11)

	'('            shift, and enter state 43
	'-i'           shift, and enter state 44
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'pi'           shift, and enter state 47
	'π'            shift, and enter state 48
	L_Scalar       shift, and enter state 49

	Scalar         goto state 39
	Complex2       goto state 51

State 12

	%start_pComplex1 -> . Complex1                      (rule 12)

	'('            shift, and enter state 43
	'-i'           shift, and enter state 44
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'pi'           shift, and enter state 47
	'π'            shift, and enter state 48
	L_Scalar       shift, and enter state 49

	Scalar         goto state 39
	Complex2       goto state 40
	Complex1       goto state 50

State 13

	%start_pComplex -> . Complex                        (rule 13)

	'('            shift, and enter state 43
	'-i'           shift, and enter state 44
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'pi'           shift, and enter state 47
	'π'            shift, and enter state 48
	L_Scalar       shift, and enter state 49

	Scalar         goto state 39
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 42

State 14

	%start_pPattern -> . Pattern                        (rule 14)

	'('            shift, and enter state 38
	L_Id           shift, and enter state 21

	Id             goto state 36
	Pattern        goto state 37

State 15

	%start_pMono2 -> . Mono2                            (rule 15)

	'('            shift, and enter state 29
	'qubit'        shift, and enter state 31
	L_Id           shift, and enter state 21

	Id             goto state 24
	Mono2          goto state 35

State 16

	%start_pMono1 -> . Mono1                            (rule 16)

	'('            shift, and enter state 29
	'qubit'        shift, and enter state 31
	L_Id           shift, and enter state 21

	Id             goto state 24
	Mono2          goto state 25
	Mono1          goto state 34

State 17

	%start_pMono -> . Mono                              (rule 17)

	'('            shift, and enter state 29
	'qubit'        shift, and enter state 31
	L_Id           shift, and enter state 21

	Id             goto state 24
	Mono2          goto state 25
	Mono1          goto state 26
	Mono           goto state 33

State 18

	%start_pType -> . Type                              (rule 18)

	'('            shift, and enter state 29
	'forall'       shift, and enter state 30
	'qubit'        shift, and enter state 31
	'∀'            shift, and enter state 32
	L_Id           shift, and enter state 21

	Id             goto state 24
	Mono2          goto state 25
	Mono1          goto state 26
	Mono           goto state 27
	Type           goto state 28

State 19

	%start_pListId -> . ListId                          (rule 19)

	L_Id           shift, and enter state 21

	Id             goto state 22
	ListId         goto state 23

State 20

	Id -> . L_Id                                        (rule 20)

	L_Id           shift, and enter state 21


State 21

	Id -> L_Id .                                        (rule 20)

	'('            reduce using rule 20
	')'            reduce using rule 20
	'*'            reduce using rule 20
	'+'            reduce using rule 20
	','            reduce using rule 20
	'-'            reduce using rule 20
	'->'           reduce using rule 20
	'-i'           reduce using rule 20
	'.'            reduce using rule 20
	':'            reduce using rule 20
	':='           reduce using rule 20
	';'            reduce using rule 20
	'='            reduce using rule 20
	'e'            reduce using rule 20
	'else'         reduce using rule 20
	'i'            reduce using rule 20
	'pi'           reduce using rule 20
	'then'         reduce using rule 20
	'}'            reduce using rule 20
	'~+'           reduce using rule 20
	'~-'           reduce using rule 20
	'~0'           reduce using rule 20
	'~1'           reduce using rule 20
	'~i'           reduce using rule 20
	'~j'           reduce using rule 20
	'π'            reduce using rule 20
	L_Id           reduce using rule 20
	L_Scalar       reduce using rule 20
	%eof           reduce using rule 20


State 22

	ListId -> Id .                                      (rule 84)
	ListId -> Id . ListId                               (rule 85)

	'.'            reduce using rule 84
	L_Id           shift, and enter state 21
	%eof           reduce using rule 84

	Id             goto state 22
	ListId         goto state 120

State 23

	%start_pListId -> ListId .                          (rule 19)

	%eof           accept


State 24

	Mono2 -> Id .                                       (rule 74)

	')'            reduce using rule 74
	'*'            reduce using rule 74
	'->'           reduce using rule 74
	':='           reduce using rule 74
	%eof           reduce using rule 74


State 25

	Mono1 -> Mono2 . '*' Mono1                          (rule 77)
	Mono1 -> Mono2 . '->' Mono1                         (rule 78)
	Mono1 -> Mono2 .                                    (rule 79)

	')'            reduce using rule 79
	'*'            shift, and enter state 118
	'->'           shift, and enter state 119
	':='           reduce using rule 79
	%eof           reduce using rule 79


State 26

	Mono -> Mono1 .                                     (rule 80)

	')'            reduce using rule 80
	':='           reduce using rule 80
	%eof           reduce using rule 80


State 27

	Type -> Mono .                                      (rule 81)

	':='           reduce using rule 81
	%eof           reduce using rule 81


State 28

	%start_pType -> Type .                              (rule 18)

	%eof           accept


State 29

	Mono2 -> '(' . Mono ')'                             (rule 76)

	'('            shift, and enter state 29
	'qubit'        shift, and enter state 31
	L_Id           shift, and enter state 21

	Id             goto state 24
	Mono2          goto state 25
	Mono1          goto state 26
	Mono           goto state 117

State 30

	Type -> 'forall' . ListId '.' Mono                  (rule 83)

	L_Id           shift, and enter state 21

	Id             goto state 22
	ListId         goto state 116

State 31

	Mono2 -> 'qubit' .                                  (rule 75)

	')'            reduce using rule 75
	'*'            reduce using rule 75
	'->'           reduce using rule 75
	':='           reduce using rule 75
	%eof           reduce using rule 75


State 32

	Type -> '∀' . ListId '.' Mono                       (rule 82)

	L_Id           shift, and enter state 21

	Id             goto state 22
	ListId         goto state 115

State 33

	%start_pMono -> Mono .                              (rule 17)

	%eof           accept


State 34

	%start_pMono1 -> Mono1 .                            (rule 16)

	%eof           accept


State 35

	%start_pMono2 -> Mono2 .                            (rule 15)

	%eof           accept


State 36

	Pattern -> Id .                                     (rule 72)

	'('            reduce using rule 72
	':'            reduce using rule 72
	':='           reduce using rule 72
	'='            reduce using rule 72
	L_Id           reduce using rule 72
	%eof           reduce using rule 72


State 37

	%start_pPattern -> Pattern .                        (rule 14)

	%eof           accept


State 38

	Pattern -> '(' . Id ',' Id ')'                      (rule 73)

	L_Id           shift, and enter state 21

	Id             goto state 114

State 39

	Complex2 -> Scalar . '+' Scalar 'i'                 (rule 57)
	Complex2 -> Scalar . '-' Scalar 'i'                 (rule 58)
	Complex2 -> Scalar .                                (rule 59)
	Complex2 -> Scalar . 'i'                            (rule 60)

	'('            reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            shift, and enter state 111
	'-'            shift, and enter state 112
	'-i'           reduce using rule 59
	'/'            reduce using rule 59
	'^'            reduce using rule 59
	'e'            reduce using rule 59
	'i'            shift, and enter state 113
			(reduce using rule 59)

	'pi'           reduce using rule 59
	'π'            reduce using rule 59
	L_Scalar       reduce using rule 59
	%eof           reduce using rule 59


State 40

	Complex1 -> Complex2 . '^' Complex1                 (rule 67)
	Complex1 -> Complex2 . '/' Complex1                 (rule 68)
	Complex1 -> Complex2 . Complex1                     (rule 69)
	Complex1 -> Complex2 .                              (rule 70)

	'('            shift, and enter state 43
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'-i'           shift, and enter state 44
	'/'            shift, and enter state 109
	'^'            shift, and enter state 110
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'pi'           shift, and enter state 47
	'π'            shift, and enter state 48
	L_Scalar       shift, and enter state 49
	%eof           reduce using rule 70

	Scalar         goto state 39
	Complex2       goto state 40
	Complex1       goto state 108

State 41

	Complex -> Complex1 .                               (rule 71)

	')'            reduce using rule 71
	'*'            reduce using rule 71
	%eof           reduce using rule 71


State 42

	%start_pComplex -> Complex .                        (rule 13)

	%eof           accept


State 43

	Complex2 -> '(' . Complex ')'                       (rule 66)

	'('            shift, and enter state 43
	'-i'           shift, and enter state 44
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'pi'           shift, and enter state 47
	'π'            shift, and enter state 48
	L_Scalar       shift, and enter state 49

	Scalar         goto state 39
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 107

State 44

	Complex2 -> '-i' .                                  (rule 61)

	'('            reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'-i'           reduce using rule 61
	'/'            reduce using rule 61
	'^'            reduce using rule 61
	'e'            reduce using rule 61
	'i'            reduce using rule 61
	'pi'           reduce using rule 61
	'π'            reduce using rule 61
	L_Scalar       reduce using rule 61
	%eof           reduce using rule 61


State 45

	Complex2 -> 'e' .                                   (rule 65)

	'('            reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'-i'           reduce using rule 65
	'/'            reduce using rule 65
	'^'            reduce using rule 65
	'e'            reduce using rule 65
	'i'            reduce using rule 65
	'pi'           reduce using rule 65
	'π'            reduce using rule 65
	L_Scalar       reduce using rule 65
	%eof           reduce using rule 65


State 46

	Complex2 -> 'i' .                                   (rule 62)

	'('            reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'-i'           reduce using rule 62
	'/'            reduce using rule 62
	'^'            reduce using rule 62
	'e'            reduce using rule 62
	'i'            reduce using rule 62
	'pi'           reduce using rule 62
	'π'            reduce using rule 62
	L_Scalar       reduce using rule 62
	%eof           reduce using rule 62


State 47

	Complex2 -> 'pi' .                                  (rule 64)

	'('            reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'-i'           reduce using rule 64
	'/'            reduce using rule 64
	'^'            reduce using rule 64
	'e'            reduce using rule 64
	'i'            reduce using rule 64
	'pi'           reduce using rule 64
	'π'            reduce using rule 64
	L_Scalar       reduce using rule 64
	%eof           reduce using rule 64


State 48

	Complex2 -> 'π' .                                   (rule 63)

	'('            reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'-i'           reduce using rule 63
	'/'            reduce using rule 63
	'^'            reduce using rule 63
	'e'            reduce using rule 63
	'i'            reduce using rule 63
	'pi'           reduce using rule 63
	'π'            reduce using rule 63
	L_Scalar       reduce using rule 63
	%eof           reduce using rule 63


State 49

	Scalar -> L_Scalar .                                (rule 21)

	'('            reduce using rule 21
	')'            reduce using rule 21
	'*'            reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'-i'           reduce using rule 21
	'/'            reduce using rule 21
	'^'            reduce using rule 21
	'e'            reduce using rule 21
	'i'            reduce using rule 21
	'pi'           reduce using rule 21
	'π'            reduce using rule 21
	L_Scalar       reduce using rule 21
	%eof           reduce using rule 21


State 50

	%start_pComplex1 -> Complex1 .                      (rule 12)

	%eof           accept


State 51

	%start_pComplex2 -> Complex2 .                      (rule 11)

	%eof           accept


State 52

	ListLet -> Let .                                    (rule 55)
	ListLet -> Let . ';' ListLet                        (rule 56)

	';'            shift, and enter state 106
	'}'            reduce using rule 55
	%eof           reduce using rule 55


State 53

	%start_pListLet -> ListLet .                        (rule 10)

	%eof           accept


State 54

	Let -> Pattern . '=' Expr                           (rule 54)

	'='            shift, and enter state 105


State 55

	%start_pLet -> Let .                                (rule 9)

	%eof           accept


State 56

	Expr3 -> Id .                                       (rule 29)

	'('            reduce using rule 29
	')'            reduce using rule 29
	'+'            reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	'-i'           reduce using rule 29
	';'            reduce using rule 29
	'e'            reduce using rule 29
	'else'         reduce using rule 29
	'i'            reduce using rule 29
	'pi'           reduce using rule 29
	'then'         reduce using rule 29
	'}'            reduce using rule 29
	'~+'           reduce using rule 29
	'~-'           reduce using rule 29
	'~0'           reduce using rule 29
	'~1'           reduce using rule 29
	'~i'           reduce using rule 29
	'~j'           reduce using rule 29
	'π'            reduce using rule 29
	L_Id           reduce using rule 29
	L_Scalar       reduce using rule 29
	%eof           reduce using rule 29


State 57

	Expr2 -> Expr3 .                                    (rule 40)

	'('            reduce using rule 40
	')'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'-i'           reduce using rule 40
	';'            reduce using rule 40
	'e'            reduce using rule 40
	'else'         reduce using rule 40
	'i'            reduce using rule 40
	'pi'           reduce using rule 40
	'then'         reduce using rule 40
	'}'            reduce using rule 40
	'~+'           reduce using rule 40
	'~-'           reduce using rule 40
	'~0'           reduce using rule 40
	'~1'           reduce using rule 40
	'~i'           reduce using rule 40
	'~j'           reduce using rule 40
	'π'            reduce using rule 40
	L_Id           reduce using rule 40
	L_Scalar       reduce using rule 40
	%eof           reduce using rule 40


State 58

	Expr2 -> Expr2 . Expr3                              (rule 39)
	Expr1 -> Expr2 . '+' Expr1                          (rule 41)
	Expr1 -> Expr2 . '-' Expr1                          (rule 42)
	Expr1 -> Expr2 .                                    (rule 49)

	'('            shift, and enter state 63
	')'            reduce using rule 49
	'+'            shift, and enter state 103
	','            reduce using rule 49
	'-'            shift, and enter state 104
	'-i'           shift, and enter state 44
	';'            reduce using rule 49
	'e'            shift, and enter state 45
	'else'         reduce using rule 49
	'i'            shift, and enter state 46
	'pi'           shift, and enter state 47
	'then'         reduce using rule 49
	'}'            reduce using rule 49
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49
	%eof           reduce using rule 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 91
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 59

	Expr -> Expr1 .                                     (rule 50)

	')'            reduce using rule 50
	','            reduce using rule 50
	';'            reduce using rule 50
	'else'         reduce using rule 50
	'then'         reduce using rule 50
	'}'            reduce using rule 50
	%eof           reduce using rule 50


State 60

	ListExpr -> Expr .                                  (rule 52)
	ListExpr -> Expr . ',' ListExpr                     (rule 53)

	')'            reduce using rule 52
	','            shift, and enter state 102
	%eof           reduce using rule 52


State 61

	%start_pListExpr -> ListExpr .                      (rule 8)

	%eof           accept


State 62

	Expr3 -> Complex . '*' Expr3                        (rule 37)

	'*'            shift, and enter state 101


State 63

	Expr3 -> '(' . ListExpr ')'                         (rule 36)
	Expr3 -> '(' . Expr ')'                             (rule 38)
	Complex2 -> '(' . Complex ')'                       (rule 66)

	'('            shift, and enter state 63
	')'            reduce using rule 51
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 98
	ListExpr       goto state 99
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 100

State 64

	Expr1 -> '\\' . ListId '.' Expr                     (rule 48)

	L_Id           shift, and enter state 21

	Id             goto state 22
	ListId         goto state 97

State 65

	Expr1 -> 'if' . Expr 'then' Expr 'else' Expr        (rule 45)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 96
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 66

	Expr1 -> 'if*' . Expr 'then' Expr 'else' Expr       (rule 44)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 95
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 67

	Expr1 -> 'if°' . Expr 'then' Expr 'else' Expr       (rule 43)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 94
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 68

	Expr1 -> 'let' . '{' ListLet '}' 'in' Expr          (rule 46)

	'{'            shift, and enter state 93


State 69

	Expr3 -> '~+' .                                     (rule 32)

	'('            reduce using rule 32
	')'            reduce using rule 32
	'+'            reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'-i'           reduce using rule 32
	';'            reduce using rule 32
	'e'            reduce using rule 32
	'else'         reduce using rule 32
	'i'            reduce using rule 32
	'pi'           reduce using rule 32
	'then'         reduce using rule 32
	'}'            reduce using rule 32
	'~+'           reduce using rule 32
	'~-'           reduce using rule 32
	'~0'           reduce using rule 32
	'~1'           reduce using rule 32
	'~i'           reduce using rule 32
	'~j'           reduce using rule 32
	'π'            reduce using rule 32
	L_Id           reduce using rule 32
	L_Scalar       reduce using rule 32
	%eof           reduce using rule 32


State 70

	Expr3 -> '~-' .                                     (rule 33)

	'('            reduce using rule 33
	')'            reduce using rule 33
	'+'            reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'-i'           reduce using rule 33
	';'            reduce using rule 33
	'e'            reduce using rule 33
	'else'         reduce using rule 33
	'i'            reduce using rule 33
	'pi'           reduce using rule 33
	'then'         reduce using rule 33
	'}'            reduce using rule 33
	'~+'           reduce using rule 33
	'~-'           reduce using rule 33
	'~0'           reduce using rule 33
	'~1'           reduce using rule 33
	'~i'           reduce using rule 33
	'~j'           reduce using rule 33
	'π'            reduce using rule 33
	L_Id           reduce using rule 33
	L_Scalar       reduce using rule 33
	%eof           reduce using rule 33


State 71

	Expr3 -> '~0' .                                     (rule 31)

	'('            reduce using rule 31
	')'            reduce using rule 31
	'+'            reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'-i'           reduce using rule 31
	';'            reduce using rule 31
	'e'            reduce using rule 31
	'else'         reduce using rule 31
	'i'            reduce using rule 31
	'pi'           reduce using rule 31
	'then'         reduce using rule 31
	'}'            reduce using rule 31
	'~+'           reduce using rule 31
	'~-'           reduce using rule 31
	'~0'           reduce using rule 31
	'~1'           reduce using rule 31
	'~i'           reduce using rule 31
	'~j'           reduce using rule 31
	'π'            reduce using rule 31
	L_Id           reduce using rule 31
	L_Scalar       reduce using rule 31
	%eof           reduce using rule 31


State 72

	Expr3 -> '~1' .                                     (rule 30)

	'('            reduce using rule 30
	')'            reduce using rule 30
	'+'            reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	'-i'           reduce using rule 30
	';'            reduce using rule 30
	'e'            reduce using rule 30
	'else'         reduce using rule 30
	'i'            reduce using rule 30
	'pi'           reduce using rule 30
	'then'         reduce using rule 30
	'}'            reduce using rule 30
	'~+'           reduce using rule 30
	'~-'           reduce using rule 30
	'~0'           reduce using rule 30
	'~1'           reduce using rule 30
	'~i'           reduce using rule 30
	'~j'           reduce using rule 30
	'π'            reduce using rule 30
	L_Id           reduce using rule 30
	L_Scalar       reduce using rule 30
	%eof           reduce using rule 30


State 73

	Expr3 -> '~i' .                                     (rule 34)

	'('            reduce using rule 34
	')'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'-i'           reduce using rule 34
	';'            reduce using rule 34
	'e'            reduce using rule 34
	'else'         reduce using rule 34
	'i'            reduce using rule 34
	'pi'           reduce using rule 34
	'then'         reduce using rule 34
	'}'            reduce using rule 34
	'~+'           reduce using rule 34
	'~-'           reduce using rule 34
	'~0'           reduce using rule 34
	'~1'           reduce using rule 34
	'~i'           reduce using rule 34
	'~j'           reduce using rule 34
	'π'            reduce using rule 34
	L_Id           reduce using rule 34
	L_Scalar       reduce using rule 34
	%eof           reduce using rule 34


State 74

	Expr3 -> '~j' .                                     (rule 35)

	'('            reduce using rule 35
	')'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'-i'           reduce using rule 35
	';'            reduce using rule 35
	'e'            reduce using rule 35
	'else'         reduce using rule 35
	'i'            reduce using rule 35
	'pi'           reduce using rule 35
	'then'         reduce using rule 35
	'}'            reduce using rule 35
	'~+'           reduce using rule 35
	'~-'           reduce using rule 35
	'~0'           reduce using rule 35
	'~1'           reduce using rule 35
	'~i'           reduce using rule 35
	'~j'           reduce using rule 35
	'π'            reduce using rule 35
	L_Id           reduce using rule 35
	L_Scalar       reduce using rule 35
	%eof           reduce using rule 35


State 75

	Expr1 -> 'λ' . ListId '.' Expr                      (rule 47)

	L_Id           shift, and enter state 21

	Id             goto state 22
	ListId         goto state 92

State 76

	%start_pExpr -> Expr .                              (rule 7)

	%eof           accept


State 77

	%start_pExpr1 -> Expr1 .                            (rule 6)

	%eof           accept


State 78

	%start_pExpr2 -> Expr2 .                            (rule 5)
	Expr2 -> Expr2 . Expr3                              (rule 39)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49
	%eof           accept

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 91
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 79

	%start_pExpr3 -> Expr3 .                            (rule 4)

	%eof           accept


State 80

	%start_pListPattern -> ListPattern .                (rule 3)

	%eof           accept


State 81

	ListPattern -> Pattern . ListPattern                (rule 28)

	'('            shift, and enter state 38
	':'            reduce using rule 27
	':='           reduce using rule 27
	L_Id           shift, and enter state 21
	%eof           reduce using rule 27

	Id             goto state 36
	ListPattern    goto state 90
	Pattern        goto state 81

State 82

	Toplevel -> Id . ListPattern ':=' Expr              (rule 25)
	Toplevel -> Id . ListPattern ':' Type ':=' Expr     (rule 26)

	'('            shift, and enter state 38
	':'            reduce using rule 27
	':='           reduce using rule 27
	L_Id           shift, and enter state 21

	Id             goto state 36
	ListPattern    goto state 89
	Pattern        goto state 81

State 83

	%start_pToplevel -> Toplevel .                      (rule 2)

	%eof           accept


State 84

	%start_pListToplevel -> ListToplevel .              (rule 1)

	%eof           accept


State 85

	ListToplevel -> Toplevel . ';' ListToplevel         (rule 24)

	';'            shift, and enter state 88


State 86

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 87

	Program -> ListToplevel .                           (rule 22)

	%eof           reduce using rule 22


State 88

	ListToplevel -> Toplevel ';' . ListToplevel         (rule 24)

	L_Id           shift, and enter state 21
	%eof           reduce using rule 23

	Id             goto state 82
	ListToplevel   goto state 148
	Toplevel       goto state 85

State 89

	Toplevel -> Id ListPattern . ':=' Expr              (rule 25)
	Toplevel -> Id ListPattern . ':' Type ':=' Expr     (rule 26)

	':'            shift, and enter state 146
	':='           shift, and enter state 147


State 90

	ListPattern -> Pattern ListPattern .                (rule 28)

	':'            reduce using rule 28
	':='           reduce using rule 28
	%eof           reduce using rule 28


State 91

	Expr2 -> Expr2 Expr3 .                              (rule 39)

	'('            reduce using rule 39
	')'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'-i'           reduce using rule 39
	';'            reduce using rule 39
	'e'            reduce using rule 39
	'else'         reduce using rule 39
	'i'            reduce using rule 39
	'pi'           reduce using rule 39
	'then'         reduce using rule 39
	'}'            reduce using rule 39
	'~+'           reduce using rule 39
	'~-'           reduce using rule 39
	'~0'           reduce using rule 39
	'~1'           reduce using rule 39
	'~i'           reduce using rule 39
	'~j'           reduce using rule 39
	'π'            reduce using rule 39
	L_Id           reduce using rule 39
	L_Scalar       reduce using rule 39
	%eof           reduce using rule 39


State 92

	Expr1 -> 'λ' ListId . '.' Expr                      (rule 47)

	'.'            shift, and enter state 145


State 93

	Expr1 -> 'let' '{' . ListLet '}' 'in' Expr          (rule 46)

	'('            shift, and enter state 38
	L_Id           shift, and enter state 21

	Id             goto state 36
	Let            goto state 52
	ListLet        goto state 144
	Pattern        goto state 54

State 94

	Expr1 -> 'if°' Expr . 'then' Expr 'else' Expr       (rule 43)

	'then'         shift, and enter state 143


State 95

	Expr1 -> 'if*' Expr . 'then' Expr 'else' Expr       (rule 44)

	'then'         shift, and enter state 142


State 96

	Expr1 -> 'if' Expr . 'then' Expr 'else' Expr        (rule 45)

	'then'         shift, and enter state 141


State 97

	Expr1 -> '\\' ListId . '.' Expr                     (rule 48)

	'.'            shift, and enter state 140


State 98

	Expr3 -> '(' Expr . ')'                             (rule 38)
	ListExpr -> Expr .                                  (rule 52)
	ListExpr -> Expr . ',' ListExpr                     (rule 53)

	')'            shift, and enter state 139
			(reduce using rule 52)

	','            shift, and enter state 102


State 99

	Expr3 -> '(' ListExpr . ')'                         (rule 36)

	')'            shift, and enter state 138


State 100

	Expr3 -> Complex . '*' Expr3                        (rule 37)
	Complex2 -> '(' Complex . ')'                       (rule 66)

	')'            shift, and enter state 131
	'*'            shift, and enter state 101


State 101

	Expr3 -> Complex '*' . Expr3                        (rule 37)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 137
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 102

	ListExpr -> Expr ',' . ListExpr                     (rule 53)

	'('            shift, and enter state 63
	')'            reduce using rule 51
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49
	%eof           reduce using rule 51

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 60
	ListExpr       goto state 136
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 103

	Expr1 -> Expr2 '+' . Expr1                          (rule 41)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 135
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 104

	Expr1 -> Expr2 '-' . Expr1                          (rule 42)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 134
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 105

	Let -> Pattern '=' . Expr                           (rule 54)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 133
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 106

	ListLet -> Let ';' . ListLet                        (rule 56)

	'('            shift, and enter state 38
	L_Id           shift, and enter state 21

	Id             goto state 36
	Let            goto state 52
	ListLet        goto state 132
	Pattern        goto state 54

State 107

	Complex2 -> '(' Complex . ')'                       (rule 66)

	')'            shift, and enter state 131


State 108

	Complex1 -> Complex2 Complex1 .                     (rule 69)

	')'            reduce using rule 69
	'*'            reduce using rule 69
	%eof           reduce using rule 69


State 109

	Complex1 -> Complex2 '/' . Complex1                 (rule 68)

	'('            shift, and enter state 43
	'-i'           shift, and enter state 44
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'pi'           shift, and enter state 47
	'π'            shift, and enter state 48
	L_Scalar       shift, and enter state 49

	Scalar         goto state 39
	Complex2       goto state 40
	Complex1       goto state 130

State 110

	Complex1 -> Complex2 '^' . Complex1                 (rule 67)

	'('            shift, and enter state 43
	'-i'           shift, and enter state 44
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'pi'           shift, and enter state 47
	'π'            shift, and enter state 48
	L_Scalar       shift, and enter state 49

	Scalar         goto state 39
	Complex2       goto state 40
	Complex1       goto state 129

State 111

	Complex2 -> Scalar '+' . Scalar 'i'                 (rule 57)

	L_Scalar       shift, and enter state 49

	Scalar         goto state 128

State 112

	Complex2 -> Scalar '-' . Scalar 'i'                 (rule 58)

	L_Scalar       shift, and enter state 49

	Scalar         goto state 127

State 113

	Complex2 -> Scalar 'i' .                            (rule 60)

	'('            reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'-i'           reduce using rule 60
	'/'            reduce using rule 60
	'^'            reduce using rule 60
	'e'            reduce using rule 60
	'i'            reduce using rule 60
	'pi'           reduce using rule 60
	'π'            reduce using rule 60
	L_Scalar       reduce using rule 60
	%eof           reduce using rule 60


State 114

	Pattern -> '(' Id . ',' Id ')'                      (rule 73)

	','            shift, and enter state 126


State 115

	Type -> '∀' ListId . '.' Mono                       (rule 82)

	'.'            shift, and enter state 125


State 116

	Type -> 'forall' ListId . '.' Mono                  (rule 83)

	'.'            shift, and enter state 124


State 117

	Mono2 -> '(' Mono . ')'                             (rule 76)

	')'            shift, and enter state 123


State 118

	Mono1 -> Mono2 '*' . Mono1                          (rule 77)

	'('            shift, and enter state 29
	'qubit'        shift, and enter state 31
	L_Id           shift, and enter state 21

	Id             goto state 24
	Mono2          goto state 25
	Mono1          goto state 122

State 119

	Mono1 -> Mono2 '->' . Mono1                         (rule 78)

	'('            shift, and enter state 29
	'qubit'        shift, and enter state 31
	L_Id           shift, and enter state 21

	Id             goto state 24
	Mono2          goto state 25
	Mono1          goto state 121

State 120

	ListId -> Id ListId .                               (rule 85)

	'.'            reduce using rule 85
	%eof           reduce using rule 85


State 121

	Mono1 -> Mono2 '->' Mono1 .                         (rule 78)

	')'            reduce using rule 78
	':='           reduce using rule 78
	%eof           reduce using rule 78


State 122

	Mono1 -> Mono2 '*' Mono1 .                          (rule 77)

	')'            reduce using rule 77
	':='           reduce using rule 77
	%eof           reduce using rule 77


State 123

	Mono2 -> '(' Mono ')' .                             (rule 76)

	')'            reduce using rule 76
	'*'            reduce using rule 76
	'->'           reduce using rule 76
	':='           reduce using rule 76
	%eof           reduce using rule 76


State 124

	Type -> 'forall' ListId '.' . Mono                  (rule 83)

	'('            shift, and enter state 29
	'qubit'        shift, and enter state 31
	L_Id           shift, and enter state 21

	Id             goto state 24
	Mono2          goto state 25
	Mono1          goto state 26
	Mono           goto state 161

State 125

	Type -> '∀' ListId '.' . Mono                       (rule 82)

	'('            shift, and enter state 29
	'qubit'        shift, and enter state 31
	L_Id           shift, and enter state 21

	Id             goto state 24
	Mono2          goto state 25
	Mono1          goto state 26
	Mono           goto state 160

State 126

	Pattern -> '(' Id ',' . Id ')'                      (rule 73)

	L_Id           shift, and enter state 21

	Id             goto state 159

State 127

	Complex2 -> Scalar '-' Scalar . 'i'                 (rule 58)

	'i'            shift, and enter state 158


State 128

	Complex2 -> Scalar '+' Scalar . 'i'                 (rule 57)

	'i'            shift, and enter state 157


State 129

	Complex1 -> Complex2 '^' Complex1 .                 (rule 67)

	')'            reduce using rule 67
	'*'            reduce using rule 67
	%eof           reduce using rule 67


State 130

	Complex1 -> Complex2 '/' Complex1 .                 (rule 68)

	')'            reduce using rule 68
	'*'            reduce using rule 68
	%eof           reduce using rule 68


State 131

	Complex2 -> '(' Complex ')' .                       (rule 66)

	'('            reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'-i'           reduce using rule 66
	'/'            reduce using rule 66
	'^'            reduce using rule 66
	'e'            reduce using rule 66
	'i'            reduce using rule 66
	'pi'           reduce using rule 66
	'π'            reduce using rule 66
	L_Scalar       reduce using rule 66
	%eof           reduce using rule 66


State 132

	ListLet -> Let ';' ListLet .                        (rule 56)

	'}'            reduce using rule 56
	%eof           reduce using rule 56


State 133

	Let -> Pattern '=' Expr .                           (rule 54)

	';'            reduce using rule 54
	'}'            reduce using rule 54
	%eof           reduce using rule 54


State 134

	Expr1 -> Expr2 '-' Expr1 .                          (rule 42)

	')'            reduce using rule 42
	','            reduce using rule 42
	';'            reduce using rule 42
	'else'         reduce using rule 42
	'then'         reduce using rule 42
	'}'            reduce using rule 42
	%eof           reduce using rule 42


State 135

	Expr1 -> Expr2 '+' Expr1 .                          (rule 41)

	')'            reduce using rule 41
	','            reduce using rule 41
	';'            reduce using rule 41
	'else'         reduce using rule 41
	'then'         reduce using rule 41
	'}'            reduce using rule 41
	%eof           reduce using rule 41


State 136

	ListExpr -> Expr ',' ListExpr .                     (rule 53)

	')'            reduce using rule 53
	%eof           reduce using rule 53


State 137

	Expr3 -> Complex '*' Expr3 .                        (rule 37)

	'('            reduce using rule 37
	')'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'-i'           reduce using rule 37
	';'            reduce using rule 37
	'e'            reduce using rule 37
	'else'         reduce using rule 37
	'i'            reduce using rule 37
	'pi'           reduce using rule 37
	'then'         reduce using rule 37
	'}'            reduce using rule 37
	'~+'           reduce using rule 37
	'~-'           reduce using rule 37
	'~0'           reduce using rule 37
	'~1'           reduce using rule 37
	'~i'           reduce using rule 37
	'~j'           reduce using rule 37
	'π'            reduce using rule 37
	L_Id           reduce using rule 37
	L_Scalar       reduce using rule 37
	%eof           reduce using rule 37


State 138

	Expr3 -> '(' ListExpr ')' .                         (rule 36)

	'('            reduce using rule 36
	')'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'-i'           reduce using rule 36
	';'            reduce using rule 36
	'e'            reduce using rule 36
	'else'         reduce using rule 36
	'i'            reduce using rule 36
	'pi'           reduce using rule 36
	'then'         reduce using rule 36
	'}'            reduce using rule 36
	'~+'           reduce using rule 36
	'~-'           reduce using rule 36
	'~0'           reduce using rule 36
	'~1'           reduce using rule 36
	'~i'           reduce using rule 36
	'~j'           reduce using rule 36
	'π'            reduce using rule 36
	L_Id           reduce using rule 36
	L_Scalar       reduce using rule 36
	%eof           reduce using rule 36


State 139

	Expr3 -> '(' Expr ')' .                             (rule 38)

	'('            reduce using rule 38
	')'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'-i'           reduce using rule 38
	';'            reduce using rule 38
	'e'            reduce using rule 38
	'else'         reduce using rule 38
	'i'            reduce using rule 38
	'pi'           reduce using rule 38
	'then'         reduce using rule 38
	'}'            reduce using rule 38
	'~+'           reduce using rule 38
	'~-'           reduce using rule 38
	'~0'           reduce using rule 38
	'~1'           reduce using rule 38
	'~i'           reduce using rule 38
	'~j'           reduce using rule 38
	'π'            reduce using rule 38
	L_Id           reduce using rule 38
	L_Scalar       reduce using rule 38
	%eof           reduce using rule 38


State 140

	Expr1 -> '\\' ListId '.' . Expr                     (rule 48)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 156
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 141

	Expr1 -> 'if' Expr 'then' . Expr 'else' Expr        (rule 45)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 155
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 142

	Expr1 -> 'if*' Expr 'then' . Expr 'else' Expr       (rule 44)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 154
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 143

	Expr1 -> 'if°' Expr 'then' . Expr 'else' Expr       (rule 43)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 153
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 144

	Expr1 -> 'let' '{' ListLet . '}' 'in' Expr          (rule 46)

	'}'            shift, and enter state 152


State 145

	Expr1 -> 'λ' ListId '.' . Expr                      (rule 47)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 151
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 146

	Toplevel -> Id ListPattern ':' . Type ':=' Expr     (rule 26)

	'('            shift, and enter state 29
	'forall'       shift, and enter state 30
	'qubit'        shift, and enter state 31
	'∀'            shift, and enter state 32
	L_Id           shift, and enter state 21

	Id             goto state 24
	Mono2          goto state 25
	Mono1          goto state 26
	Mono           goto state 27
	Type           goto state 150

State 147

	Toplevel -> Id ListPattern ':=' . Expr              (rule 25)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 149
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 148

	ListToplevel -> Toplevel ';' ListToplevel .         (rule 24)

	%eof           reduce using rule 24


State 149

	Toplevel -> Id ListPattern ':=' Expr .              (rule 25)

	';'            reduce using rule 25
	%eof           reduce using rule 25


State 150

	Toplevel -> Id ListPattern ':' Type . ':=' Expr     (rule 26)

	':='           shift, and enter state 167


State 151

	Expr1 -> 'λ' ListId '.' Expr .                      (rule 47)

	')'            reduce using rule 47
	','            reduce using rule 47
	';'            reduce using rule 47
	'else'         reduce using rule 47
	'then'         reduce using rule 47
	'}'            reduce using rule 47
	%eof           reduce using rule 47


State 152

	Expr1 -> 'let' '{' ListLet '}' . 'in' Expr          (rule 46)

	'in'           shift, and enter state 166


State 153

	Expr1 -> 'if°' Expr 'then' Expr . 'else' Expr       (rule 43)

	'else'         shift, and enter state 165


State 154

	Expr1 -> 'if*' Expr 'then' Expr . 'else' Expr       (rule 44)

	'else'         shift, and enter state 164


State 155

	Expr1 -> 'if' Expr 'then' Expr . 'else' Expr        (rule 45)

	'else'         shift, and enter state 163


State 156

	Expr1 -> '\\' ListId '.' Expr .                     (rule 48)

	')'            reduce using rule 48
	','            reduce using rule 48
	';'            reduce using rule 48
	'else'         reduce using rule 48
	'then'         reduce using rule 48
	'}'            reduce using rule 48
	%eof           reduce using rule 48


State 157

	Complex2 -> Scalar '+' Scalar 'i' .                 (rule 57)

	'('            reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'-i'           reduce using rule 57
	'/'            reduce using rule 57
	'^'            reduce using rule 57
	'e'            reduce using rule 57
	'i'            reduce using rule 57
	'pi'           reduce using rule 57
	'π'            reduce using rule 57
	L_Scalar       reduce using rule 57
	%eof           reduce using rule 57


State 158

	Complex2 -> Scalar '-' Scalar 'i' .                 (rule 58)

	'('            reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'-i'           reduce using rule 58
	'/'            reduce using rule 58
	'^'            reduce using rule 58
	'e'            reduce using rule 58
	'i'            reduce using rule 58
	'pi'           reduce using rule 58
	'π'            reduce using rule 58
	L_Scalar       reduce using rule 58
	%eof           reduce using rule 58


State 159

	Pattern -> '(' Id ',' Id . ')'                      (rule 73)

	')'            shift, and enter state 162


State 160

	Type -> '∀' ListId '.' Mono .                       (rule 82)

	':='           reduce using rule 82
	%eof           reduce using rule 82


State 161

	Type -> 'forall' ListId '.' Mono .                  (rule 83)

	':='           reduce using rule 83
	%eof           reduce using rule 83


State 162

	Pattern -> '(' Id ',' Id ')' .                      (rule 73)

	'('            reduce using rule 73
	':'            reduce using rule 73
	':='           reduce using rule 73
	'='            reduce using rule 73
	L_Id           reduce using rule 73
	%eof           reduce using rule 73


State 163

	Expr1 -> 'if' Expr 'then' Expr 'else' . Expr        (rule 45)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 172
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 164

	Expr1 -> 'if*' Expr 'then' Expr 'else' . Expr       (rule 44)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 171
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 165

	Expr1 -> 'if°' Expr 'then' Expr 'else' . Expr       (rule 43)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 170
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 166

	Expr1 -> 'let' '{' ListLet '}' 'in' . Expr          (rule 46)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 169
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 167

	Toplevel -> Id ListPattern ':' Type ':=' . Expr     (rule 26)

	'('            shift, and enter state 63
	'-i'           shift, and enter state 44
	'\\'           shift, and enter state 64
	'e'            shift, and enter state 45
	'i'            shift, and enter state 46
	'if'           shift, and enter state 65
	'if*'          shift, and enter state 66
	'if°'          shift, and enter state 67
	'let'          shift, and enter state 68
	'pi'           shift, and enter state 47
	'~+'           shift, and enter state 69
	'~-'           shift, and enter state 70
	'~0'           shift, and enter state 71
	'~1'           shift, and enter state 72
	'~i'           shift, and enter state 73
	'~j'           shift, and enter state 74
	'λ'            shift, and enter state 75
	'π'            shift, and enter state 48
	L_Id           shift, and enter state 21
	L_Scalar       shift, and enter state 49

	Id             goto state 56
	Scalar         goto state 39
	Expr3          goto state 57
	Expr2          goto state 58
	Expr1          goto state 59
	Expr           goto state 168
	Complex2       goto state 40
	Complex1       goto state 41
	Complex        goto state 62

State 168

	Toplevel -> Id ListPattern ':' Type ':=' Expr .     (rule 26)

	';'            reduce using rule 26
	%eof           reduce using rule 26


State 169

	Expr1 -> 'let' '{' ListLet '}' 'in' Expr .          (rule 46)

	')'            reduce using rule 46
	','            reduce using rule 46
	';'            reduce using rule 46
	'else'         reduce using rule 46
	'then'         reduce using rule 46
	'}'            reduce using rule 46
	%eof           reduce using rule 46


State 170

	Expr1 -> 'if°' Expr 'then' Expr 'else' Expr .       (rule 43)

	')'            reduce using rule 43
	','            reduce using rule 43
	';'            reduce using rule 43
	'else'         reduce using rule 43
	'then'         reduce using rule 43
	'}'            reduce using rule 43
	%eof           reduce using rule 43


State 171

	Expr1 -> 'if*' Expr 'then' Expr 'else' Expr .       (rule 44)

	')'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44
	'else'         reduce using rule 44
	'then'         reduce using rule 44
	'}'            reduce using rule 44
	%eof           reduce using rule 44


State 172

	Expr1 -> 'if' Expr 'then' Expr 'else' Expr .        (rule 45)

	')'            reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45
	'else'         reduce using rule 45
	'then'         reduce using rule 45
	'}'            reduce using rule 45
	%eof           reduce using rule 45


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 86
Number of terminals: 41
Number of non-terminals: 42
Number of states: 173
