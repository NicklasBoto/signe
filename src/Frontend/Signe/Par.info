-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Frontend/Signe/Par.y
-----------------------------------------------------------------------------

state 48 contains 1 shift/reduce conflicts.
state 104 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pListToplevel -> ListToplevel               (1)
	%start_pToplevel -> Toplevel                       (2)
	%start_pListPattern -> ListPattern                 (3)
	%start_pExpr3 -> Expr3                             (4)
	%start_pExpr2 -> Expr2                             (5)
	%start_pExpr1 -> Expr1                             (6)
	%start_pExpr -> Expr                               (7)
	%start_pListExpr -> ListExpr                       (8)
	%start_pLet -> Let                                 (9)
	%start_pListLet -> ListLet                         (10)
	%start_pSupOp -> SupOp                             (11)
	%start_pComplex2 -> Complex2                       (12)
	%start_pComplex1 -> Complex1                       (13)
	%start_pComplex -> Complex                         (14)
	%start_pPattern -> Pattern                         (15)
	%start_pPatternVar -> PatternVar                   (16)
	%start_pListPatternVar -> ListPatternVar           (17)
	%start_pMono2 -> Mono2                             (18)
	%start_pMono1 -> Mono1                             (19)
	%start_pMono -> Mono                               (20)
	%start_pType -> Type                               (21)
	%start_pListId -> ListId                           (22)
	Id -> L_Id                                         (23)
	Scalar -> L_Scalar                                 (24)
	Program -> ListToplevel                            (25)
	ListToplevel ->                                    (26)
	ListToplevel -> Toplevel ';' ListToplevel          (27)
	Toplevel -> Id ListPattern ':=' Expr               (28)
	Toplevel -> Id ListPattern ':' Type ':=' Expr      (29)
	ListPattern ->                                     (30)
	ListPattern -> Pattern ListPattern                 (31)
	Expr3 -> Id                                        (32)
	Expr3 -> '~1'                                      (33)
	Expr3 -> '~0'                                      (34)
	Expr3 -> '~+'                                      (35)
	Expr3 -> '~-'                                      (36)
	Expr3 -> '~i'                                      (37)
	Expr3 -> '~j'                                      (38)
	Expr3 -> '(' ListExpr ')'                          (39)
	Expr3 -> '(' Expr ')'                              (40)
	Expr2 -> Expr2 Expr3                               (41)
	Expr2 -> Expr3                                     (42)
	Expr1 -> Complex '*' Expr2 SupOp Complex '*' Expr1   (43)
	Expr1 -> Expr2 SupOp Expr1                         (44)
	Expr1 -> Complex '*' Expr2                         (45)
	Expr1 -> Expr2 '$' Expr1                           (46)
	Expr1 -> Expr2 '∘' Expr1                           (47)
	Expr1 -> Expr2 '@' Expr1                           (48)
	Expr1 -> 'if°' Expr 'then' Expr 'else' Expr        (49)
	Expr1 -> 'if*' Expr 'then' Expr 'else' Expr        (50)
	Expr1 -> 'if' Expr 'then' Expr 'else' Expr         (51)
	Expr1 -> 'let' '{' ListLet '}' 'in' Expr           (52)
	Expr1 -> 'λ' ListId '.' Expr                       (53)
	Expr1 -> '\\' ListId '.' Expr                      (54)
	Expr1 -> Expr2                                     (55)
	Expr -> Expr1                                      (56)
	ListExpr ->                                        (57)
	ListExpr -> Expr                                   (58)
	ListExpr -> Expr ',' ListExpr                      (59)
	Let -> Pattern '=' Expr                            (60)
	ListLet -> Let                                     (61)
	ListLet -> Let ';' ListLet                         (62)
	SupOp -> '+'                                       (63)
	SupOp -> '-'                                       (64)
	Complex2 -> Scalar '+' Scalar 'i'                  (65)
	Complex2 -> Scalar '-' Scalar 'i'                  (66)
	Complex2 -> Scalar                                 (67)
	Complex2 -> Scalar 'i'                             (68)
	Complex2 -> '-i'                                   (69)
	Complex2 -> 'i'                                    (70)
	Complex2 -> 'π'                                    (71)
	Complex2 -> 'pi'                                   (72)
	Complex2 -> 'e'                                    (73)
	Complex2 -> '(' Complex ')'                        (74)
	Complex1 -> Complex2 '^' Complex1                  (75)
	Complex1 -> Complex2 '/' Complex1                  (76)
	Complex1 -> Complex2 Complex1                      (77)
	Complex1 -> Complex2                               (78)
	Complex -> Complex1                                (79)
	Pattern -> PatternVar                              (80)
	Pattern -> '(' ListPatternVar ')'                  (81)
	PatternVar -> Id                                   (82)
	ListPatternVar ->                                  (83)
	ListPatternVar -> PatternVar                       (84)
	ListPatternVar -> PatternVar ',' ListPatternVar    (85)
	Mono2 -> Id                                        (86)
	Mono2 -> 'qubit'                                   (87)
	Mono2 -> '⊤'                                       (88)
	Mono2 -> 'unit'                                    (89)
	Mono2 -> '(' Mono ')'                              (90)
	Mono1 -> Mono2 '*' Mono1                           (91)
	Mono1 -> Mono2 '->' Mono1                          (92)
	Mono1 -> Mono2                                     (93)
	Mono -> Mono1                                      (94)
	Type -> Mono                                       (95)
	Type -> '∀' ListId '.' Mono                        (96)
	Type -> 'forall' ListId '.' Mono                   (97)
	ListId -> Id                                       (98)
	ListId -> Id ListId                                (99)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'$'            { PT _ (TS _ 1) }
	'('            { PT _ (TS _ 2) }
	')'            { PT _ (TS _ 3) }
	'*'            { PT _ (TS _ 4) }
	'+'            { PT _ (TS _ 5) }
	','            { PT _ (TS _ 6) }
	'-'            { PT _ (TS _ 7) }
	'->'           { PT _ (TS _ 8) }
	'-i'           { PT _ (TS _ 9) }
	'.'            { PT _ (TS _ 10) }
	'/'            { PT _ (TS _ 11) }
	':'            { PT _ (TS _ 12) }
	':='           { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'='            { PT _ (TS _ 15) }
	'@'            { PT _ (TS _ 16) }
	'\\'           { PT _ (TS _ 17) }
	'^'            { PT _ (TS _ 18) }
	'e'            { PT _ (TS _ 19) }
	'else'         { PT _ (TS _ 20) }
	'forall'       { PT _ (TS _ 21) }
	'i'            { PT _ (TS _ 22) }
	'if'           { PT _ (TS _ 23) }
	'if*'          { PT _ (TS _ 24) }
	'if°'          { PT _ (TS _ 25) }
	'in'           { PT _ (TS _ 26) }
	'let'          { PT _ (TS _ 27) }
	'pi'           { PT _ (TS _ 28) }
	'qubit'        { PT _ (TS _ 29) }
	'then'         { PT _ (TS _ 30) }
	'unit'         { PT _ (TS _ 31) }
	'{'            { PT _ (TS _ 32) }
	'}'            { PT _ (TS _ 33) }
	'~+'           { PT _ (TS _ 34) }
	'~-'           { PT _ (TS _ 35) }
	'~0'           { PT _ (TS _ 36) }
	'~1'           { PT _ (TS _ 37) }
	'~i'           { PT _ (TS _ 38) }
	'~j'           { PT _ (TS _ 39) }
	'λ'            { PT _ (TS _ 40) }
	'π'            { PT _ (TS _ 41) }
	'∀'            { PT _ (TS _ 42) }
	'∘'            { PT _ (TS _ 43) }
	'⊤'            { PT _ (TS _ 44) }
	L_Id           { PT _ (T_Id _) }
	L_Scalar       { PT _ (T_Scalar $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pListToplevel rule  1
	%start_pToplevel rule  2
	%start_pListPattern rule  3
	%start_pExpr3   rule  4
	%start_pExpr2   rule  5
	%start_pExpr1   rule  6
	%start_pExpr    rule  7
	%start_pListExpr rule  8
	%start_pLet     rule  9
	%start_pListLet rule  10
	%start_pSupOp   rule  11
	%start_pComplex2 rule  12
	%start_pComplex1 rule  13
	%start_pComplex rule  14
	%start_pPattern rule  15
	%start_pPatternVar rule  16
	%start_pListPatternVar rule  17
	%start_pMono2   rule  18
	%start_pMono1   rule  19
	%start_pMono    rule  20
	%start_pType    rule  21
	%start_pListId  rule  22
	Id              rule  23
	Scalar          rule  24
	Program         rule  25
	ListToplevel    rules 26, 27
	Toplevel        rules 28, 29
	ListPattern     rules 30, 31
	Expr3           rules 32, 33, 34, 35, 36, 37, 38, 39, 40
	Expr2           rules 41, 42
	Expr1           rules 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
	Expr            rule  56
	ListExpr        rules 57, 58, 59
	Let             rule  60
	ListLet         rules 61, 62
	SupOp           rules 63, 64
	Complex2        rules 65, 66, 67, 68, 69, 70, 71, 72, 73, 74
	Complex1        rules 75, 76, 77, 78
	Complex         rule  79
	Pattern         rules 80, 81
	PatternVar      rule  82
	ListPatternVar  rules 83, 84, 85
	Mono2           rules 86, 87, 88, 89, 90
	Mono1           rules 91, 92, 93
	Mono            rule  94
	Type            rules 95, 96, 97
	ListId          rules 98, 99

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	L_Id           shift, and enter state 24
	%eof           reduce using rule 26

	Id             goto state 95
	Program        goto state 99
	ListToplevel   goto state 100
	Toplevel       goto state 98

State 1


	L_Id           shift, and enter state 24
	%eof           reduce using rule 26

	Id             goto state 95
	ListToplevel   goto state 97
	Toplevel       goto state 98

State 2


	L_Id           shift, and enter state 24

	Id             goto state 95
	Toplevel       goto state 96

State 3


	'('            shift, and enter state 47
	L_Id           shift, and enter state 24
	%eof           reduce using rule 30

	Id             goto state 41
	ListPattern    goto state 93
	Pattern        goto state 94
	PatternVar     goto state 46

State 4


	'('            shift, and enter state 91
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	L_Id           shift, and enter state 24

	Id             goto state 68
	Expr3          goto state 92

State 5


	'('            shift, and enter state 91
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	L_Id           shift, and enter state 24

	Id             goto state 68
	Expr3          goto state 69
	Expr2          goto state 90

State 6


	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 89
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 7


	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 88
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 8


	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58
	%eof           reduce using rule 57

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 72
	ListExpr       goto state 73
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 9


	'('            shift, and enter state 47
	L_Id           shift, and enter state 24

	Id             goto state 41
	Let            goto state 67
	Pattern        goto state 66
	PatternVar     goto state 46

State 10


	'('            shift, and enter state 47
	L_Id           shift, and enter state 24

	Id             goto state 41
	Let            goto state 64
	ListLet        goto state 65
	Pattern        goto state 66
	PatternVar     goto state 46

State 11


	'+'            shift, and enter state 62
	'-'            shift, and enter state 63

	SupOp          goto state 61

State 12


	'('            shift, and enter state 52
	'-i'           shift, and enter state 53
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'pi'           shift, and enter state 56
	'π'            shift, and enter state 57
	L_Scalar       shift, and enter state 58

	Scalar         goto state 48
	Complex2       goto state 60

State 13


	'('            shift, and enter state 52
	'-i'           shift, and enter state 53
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'pi'           shift, and enter state 56
	'π'            shift, and enter state 57
	L_Scalar       shift, and enter state 58

	Scalar         goto state 48
	Complex2       goto state 49
	Complex1       goto state 59

State 14


	'('            shift, and enter state 52
	'-i'           shift, and enter state 53
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'pi'           shift, and enter state 56
	'π'            shift, and enter state 57
	L_Scalar       shift, and enter state 58

	Scalar         goto state 48
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 51

State 15


	'('            shift, and enter state 47
	L_Id           shift, and enter state 24

	Id             goto state 41
	Pattern        goto state 45
	PatternVar     goto state 46

State 16


	L_Id           shift, and enter state 24

	Id             goto state 41
	PatternVar     goto state 44

State 17


	L_Id           shift, and enter state 24
	%eof           reduce using rule 83

	Id             goto state 41
	PatternVar     goto state 42
	ListPatternVar goto state 43

State 18


	'('            shift, and enter state 32
	'qubit'        shift, and enter state 34
	'unit'         shift, and enter state 35
	'⊤'            shift, and enter state 37
	L_Id           shift, and enter state 24

	Id             goto state 27
	Mono2          goto state 40

State 19


	'('            shift, and enter state 32
	'qubit'        shift, and enter state 34
	'unit'         shift, and enter state 35
	'⊤'            shift, and enter state 37
	L_Id           shift, and enter state 24

	Id             goto state 27
	Mono2          goto state 28
	Mono1          goto state 39

State 20


	'('            shift, and enter state 32
	'qubit'        shift, and enter state 34
	'unit'         shift, and enter state 35
	'⊤'            shift, and enter state 37
	L_Id           shift, and enter state 24

	Id             goto state 27
	Mono2          goto state 28
	Mono1          goto state 29
	Mono           goto state 38

State 21


	'('            shift, and enter state 32
	'forall'       shift, and enter state 33
	'qubit'        shift, and enter state 34
	'unit'         shift, and enter state 35
	'∀'            shift, and enter state 36
	'⊤'            shift, and enter state 37
	L_Id           shift, and enter state 24

	Id             goto state 27
	Mono2          goto state 28
	Mono1          goto state 29
	Mono           goto state 30
	Type           goto state 31

State 22


	L_Id           shift, and enter state 24

	Id             goto state 25
	ListId         goto state 26

State 23


	L_Id           shift, and enter state 24


State 24

	Id -> L_Id .                                        (rule 23)

	'$'            reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	'*'            reduce using rule 23
	'+'            reduce using rule 23
	','            reduce using rule 23
	'-'            reduce using rule 23
	'->'           reduce using rule 23
	'.'            reduce using rule 23
	':'            reduce using rule 23
	':='           reduce using rule 23
	';'            reduce using rule 23
	'='            reduce using rule 23
	'@'            reduce using rule 23
	'else'         reduce using rule 23
	'then'         reduce using rule 23
	'}'            reduce using rule 23
	'~+'           reduce using rule 23
	'~-'           reduce using rule 23
	'~0'           reduce using rule 23
	'~1'           reduce using rule 23
	'~i'           reduce using rule 23
	'~j'           reduce using rule 23
	'∘'            reduce using rule 23
	L_Id           reduce using rule 23
	%eof           reduce using rule 23


State 25

	ListId -> Id .                                      (rule 98)
	ListId -> Id . ListId                               (rule 99)

	'.'            reduce using rule 98
	L_Id           shift, and enter state 24
	%eof           reduce using rule 98

	Id             goto state 25
	ListId         goto state 136

State 26

	%start_pListId -> ListId .                          (rule 22)

	%eof           accept


State 27

	Mono2 -> Id .                                       (rule 86)

	')'            reduce using rule 86
	'*'            reduce using rule 86
	'->'           reduce using rule 86
	':='           reduce using rule 86
	%eof           reduce using rule 86


State 28

	Mono1 -> Mono2 . '*' Mono1                          (rule 91)
	Mono1 -> Mono2 . '->' Mono1                         (rule 92)
	Mono1 -> Mono2 .                                    (rule 93)

	')'            reduce using rule 93
	'*'            shift, and enter state 134
	'->'           shift, and enter state 135
	':='           reduce using rule 93
	%eof           reduce using rule 93


State 29

	Mono -> Mono1 .                                     (rule 94)

	')'            reduce using rule 94
	':='           reduce using rule 94
	%eof           reduce using rule 94


State 30

	Type -> Mono .                                      (rule 95)

	':='           reduce using rule 95
	%eof           reduce using rule 95


State 31

	%start_pType -> Type .                              (rule 21)

	%eof           accept


State 32

	Mono2 -> '(' . Mono ')'                             (rule 90)

	'('            shift, and enter state 32
	'qubit'        shift, and enter state 34
	'unit'         shift, and enter state 35
	'⊤'            shift, and enter state 37
	L_Id           shift, and enter state 24

	Id             goto state 27
	Mono2          goto state 28
	Mono1          goto state 29
	Mono           goto state 133

State 33

	Type -> 'forall' . ListId '.' Mono                  (rule 97)

	L_Id           shift, and enter state 24

	Id             goto state 25
	ListId         goto state 132

State 34

	Mono2 -> 'qubit' .                                  (rule 87)

	')'            reduce using rule 87
	'*'            reduce using rule 87
	'->'           reduce using rule 87
	':='           reduce using rule 87
	%eof           reduce using rule 87


State 35

	Mono2 -> 'unit' .                                   (rule 89)

	')'            reduce using rule 89
	'*'            reduce using rule 89
	'->'           reduce using rule 89
	':='           reduce using rule 89
	%eof           reduce using rule 89


State 36

	Type -> '∀' . ListId '.' Mono                       (rule 96)

	L_Id           shift, and enter state 24

	Id             goto state 25
	ListId         goto state 131

State 37

	Mono2 -> '⊤' .                                      (rule 88)

	')'            reduce using rule 88
	'*'            reduce using rule 88
	'->'           reduce using rule 88
	':='           reduce using rule 88
	%eof           reduce using rule 88


State 38

	%start_pMono -> Mono .                              (rule 20)

	%eof           accept


State 39

	%start_pMono1 -> Mono1 .                            (rule 19)

	%eof           accept


State 40

	%start_pMono2 -> Mono2 .                            (rule 18)

	%eof           accept


State 41

	PatternVar -> Id .                                  (rule 82)

	'('            reduce using rule 82
	')'            reduce using rule 82
	','            reduce using rule 82
	':'            reduce using rule 82
	':='           reduce using rule 82
	'='            reduce using rule 82
	L_Id           reduce using rule 82
	%eof           reduce using rule 82


State 42

	ListPatternVar -> PatternVar .                      (rule 84)
	ListPatternVar -> PatternVar . ',' ListPatternVar    (rule 85)

	')'            reduce using rule 84
	','            shift, and enter state 130
	%eof           reduce using rule 84


State 43

	%start_pListPatternVar -> ListPatternVar .          (rule 17)

	%eof           accept


State 44

	%start_pPatternVar -> PatternVar .                  (rule 16)

	%eof           accept


State 45

	%start_pPattern -> Pattern .                        (rule 15)

	%eof           accept


State 46

	Pattern -> PatternVar .                             (rule 80)

	'('            reduce using rule 80
	':'            reduce using rule 80
	':='           reduce using rule 80
	'='            reduce using rule 80
	L_Id           reduce using rule 80
	%eof           reduce using rule 80


State 47

	Pattern -> '(' . ListPatternVar ')'                 (rule 81)

	')'            reduce using rule 83
	L_Id           shift, and enter state 24

	Id             goto state 41
	PatternVar     goto state 42
	ListPatternVar goto state 129

State 48

	Complex2 -> Scalar . '+' Scalar 'i'                 (rule 65)
	Complex2 -> Scalar . '-' Scalar 'i'                 (rule 66)
	Complex2 -> Scalar .                                (rule 67)
	Complex2 -> Scalar . 'i'                            (rule 68)

	'('            reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            shift, and enter state 126
	'-'            shift, and enter state 127
	'-i'           reduce using rule 67
	'/'            reduce using rule 67
	'^'            reduce using rule 67
	'e'            reduce using rule 67
	'i'            shift, and enter state 128
			(reduce using rule 67)

	'pi'           reduce using rule 67
	'π'            reduce using rule 67
	L_Scalar       reduce using rule 67
	%eof           reduce using rule 67


State 49

	Complex1 -> Complex2 . '^' Complex1                 (rule 75)
	Complex1 -> Complex2 . '/' Complex1                 (rule 76)
	Complex1 -> Complex2 . Complex1                     (rule 77)
	Complex1 -> Complex2 .                              (rule 78)

	'('            shift, and enter state 52
	')'            reduce using rule 78
	'*'            reduce using rule 78
	'-i'           shift, and enter state 53
	'/'            shift, and enter state 124
	'^'            shift, and enter state 125
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'pi'           shift, and enter state 56
	'π'            shift, and enter state 57
	L_Scalar       shift, and enter state 58
	%eof           reduce using rule 78

	Scalar         goto state 48
	Complex2       goto state 49
	Complex1       goto state 123

State 50

	Complex -> Complex1 .                               (rule 79)

	')'            reduce using rule 79
	'*'            reduce using rule 79
	%eof           reduce using rule 79


State 51

	%start_pComplex -> Complex .                        (rule 14)

	%eof           accept


State 52

	Complex2 -> '(' . Complex ')'                       (rule 74)

	'('            shift, and enter state 52
	'-i'           shift, and enter state 53
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'pi'           shift, and enter state 56
	'π'            shift, and enter state 57
	L_Scalar       shift, and enter state 58

	Scalar         goto state 48
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 122

State 53

	Complex2 -> '-i' .                                  (rule 69)

	'('            reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	'-i'           reduce using rule 69
	'/'            reduce using rule 69
	'^'            reduce using rule 69
	'e'            reduce using rule 69
	'i'            reduce using rule 69
	'pi'           reduce using rule 69
	'π'            reduce using rule 69
	L_Scalar       reduce using rule 69
	%eof           reduce using rule 69


State 54

	Complex2 -> 'e' .                                   (rule 73)

	'('            reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	'-i'           reduce using rule 73
	'/'            reduce using rule 73
	'^'            reduce using rule 73
	'e'            reduce using rule 73
	'i'            reduce using rule 73
	'pi'           reduce using rule 73
	'π'            reduce using rule 73
	L_Scalar       reduce using rule 73
	%eof           reduce using rule 73


State 55

	Complex2 -> 'i' .                                   (rule 70)

	'('            reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'-i'           reduce using rule 70
	'/'            reduce using rule 70
	'^'            reduce using rule 70
	'e'            reduce using rule 70
	'i'            reduce using rule 70
	'pi'           reduce using rule 70
	'π'            reduce using rule 70
	L_Scalar       reduce using rule 70
	%eof           reduce using rule 70


State 56

	Complex2 -> 'pi' .                                  (rule 72)

	'('            reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'-i'           reduce using rule 72
	'/'            reduce using rule 72
	'^'            reduce using rule 72
	'e'            reduce using rule 72
	'i'            reduce using rule 72
	'pi'           reduce using rule 72
	'π'            reduce using rule 72
	L_Scalar       reduce using rule 72
	%eof           reduce using rule 72


State 57

	Complex2 -> 'π' .                                   (rule 71)

	'('            reduce using rule 71
	')'            reduce using rule 71
	'*'            reduce using rule 71
	'-i'           reduce using rule 71
	'/'            reduce using rule 71
	'^'            reduce using rule 71
	'e'            reduce using rule 71
	'i'            reduce using rule 71
	'pi'           reduce using rule 71
	'π'            reduce using rule 71
	L_Scalar       reduce using rule 71
	%eof           reduce using rule 71


State 58

	Scalar -> L_Scalar .                                (rule 24)

	'('            reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'-i'           reduce using rule 24
	'/'            reduce using rule 24
	'^'            reduce using rule 24
	'e'            reduce using rule 24
	'i'            reduce using rule 24
	'pi'           reduce using rule 24
	'π'            reduce using rule 24
	L_Scalar       reduce using rule 24
	%eof           reduce using rule 24


State 59

	%start_pComplex1 -> Complex1 .                      (rule 13)

	%eof           accept


State 60

	%start_pComplex2 -> Complex2 .                      (rule 12)

	%eof           accept


State 61

	%start_pSupOp -> SupOp .                            (rule 11)

	%eof           accept


State 62

	SupOp -> '+' .                                      (rule 63)

	'('            reduce using rule 63
	'-i'           reduce using rule 63
	'\\'           reduce using rule 63
	'e'            reduce using rule 63
	'i'            reduce using rule 63
	'if'           reduce using rule 63
	'if*'          reduce using rule 63
	'if°'          reduce using rule 63
	'let'          reduce using rule 63
	'pi'           reduce using rule 63
	'~+'           reduce using rule 63
	'~-'           reduce using rule 63
	'~0'           reduce using rule 63
	'~1'           reduce using rule 63
	'~i'           reduce using rule 63
	'~j'           reduce using rule 63
	'λ'            reduce using rule 63
	'π'            reduce using rule 63
	L_Id           reduce using rule 63
	L_Scalar       reduce using rule 63
	%eof           reduce using rule 63


State 63

	SupOp -> '-' .                                      (rule 64)

	'('            reduce using rule 64
	'-i'           reduce using rule 64
	'\\'           reduce using rule 64
	'e'            reduce using rule 64
	'i'            reduce using rule 64
	'if'           reduce using rule 64
	'if*'          reduce using rule 64
	'if°'          reduce using rule 64
	'let'          reduce using rule 64
	'pi'           reduce using rule 64
	'~+'           reduce using rule 64
	'~-'           reduce using rule 64
	'~0'           reduce using rule 64
	'~1'           reduce using rule 64
	'~i'           reduce using rule 64
	'~j'           reduce using rule 64
	'λ'            reduce using rule 64
	'π'            reduce using rule 64
	L_Id           reduce using rule 64
	L_Scalar       reduce using rule 64
	%eof           reduce using rule 64


State 64

	ListLet -> Let .                                    (rule 61)
	ListLet -> Let . ';' ListLet                        (rule 62)

	';'            shift, and enter state 121
	'}'            reduce using rule 61
	%eof           reduce using rule 61


State 65

	%start_pListLet -> ListLet .                        (rule 10)

	%eof           accept


State 66

	Let -> Pattern . '=' Expr                           (rule 60)

	'='            shift, and enter state 120


State 67

	%start_pLet -> Let .                                (rule 9)

	%eof           accept


State 68

	Expr3 -> Id .                                       (rule 32)

	'$'            reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'+'            reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'@'            reduce using rule 32
	'else'         reduce using rule 32
	'then'         reduce using rule 32
	'}'            reduce using rule 32
	'~+'           reduce using rule 32
	'~-'           reduce using rule 32
	'~0'           reduce using rule 32
	'~1'           reduce using rule 32
	'~i'           reduce using rule 32
	'~j'           reduce using rule 32
	'∘'            reduce using rule 32
	L_Id           reduce using rule 32
	%eof           reduce using rule 32


State 69

	Expr2 -> Expr3 .                                    (rule 42)

	'$'            reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	';'            reduce using rule 42
	'@'            reduce using rule 42
	'else'         reduce using rule 42
	'then'         reduce using rule 42
	'}'            reduce using rule 42
	'~+'           reduce using rule 42
	'~-'           reduce using rule 42
	'~0'           reduce using rule 42
	'~1'           reduce using rule 42
	'~i'           reduce using rule 42
	'~j'           reduce using rule 42
	'∘'            reduce using rule 42
	L_Id           reduce using rule 42
	%eof           reduce using rule 42


State 70

	Expr2 -> Expr2 . Expr3                              (rule 41)
	Expr1 -> Expr2 . SupOp Expr1                        (rule 44)
	Expr1 -> Expr2 . '$' Expr1                          (rule 46)
	Expr1 -> Expr2 . '∘' Expr1                          (rule 47)
	Expr1 -> Expr2 . '@' Expr1                          (rule 48)
	Expr1 -> Expr2 .                                    (rule 55)

	'$'            shift, and enter state 117
	'('            shift, and enter state 91
	')'            reduce using rule 55
	'+'            shift, and enter state 62
	','            reduce using rule 55
	'-'            shift, and enter state 63
	';'            reduce using rule 55
	'@'            shift, and enter state 118
	'else'         reduce using rule 55
	'then'         reduce using rule 55
	'}'            reduce using rule 55
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'∘'            shift, and enter state 119
	L_Id           shift, and enter state 24
	%eof           reduce using rule 55

	Id             goto state 68
	Expr3          goto state 106
	SupOp          goto state 116

State 71

	Expr -> Expr1 .                                     (rule 56)

	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	'else'         reduce using rule 56
	'then'         reduce using rule 56
	'}'            reduce using rule 56
	%eof           reduce using rule 56


State 72

	ListExpr -> Expr .                                  (rule 58)
	ListExpr -> Expr . ',' ListExpr                     (rule 59)

	')'            reduce using rule 58
	','            shift, and enter state 115
	%eof           reduce using rule 58


State 73

	%start_pListExpr -> ListExpr .                      (rule 8)

	%eof           accept


State 74

	Expr1 -> Complex . '*' Expr2 SupOp Complex '*' Expr1    (rule 43)
	Expr1 -> Complex . '*' Expr2                        (rule 45)

	'*'            shift, and enter state 114


State 75

	Expr3 -> '(' . ListExpr ')'                         (rule 39)
	Expr3 -> '(' . Expr ')'                             (rule 40)
	Complex2 -> '(' . Complex ')'                       (rule 74)

	'('            shift, and enter state 75
	')'            reduce using rule 57
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 104
	ListExpr       goto state 105
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 113

State 76

	Expr1 -> '\\' . ListId '.' Expr                     (rule 54)

	L_Id           shift, and enter state 24

	Id             goto state 25
	ListId         goto state 112

State 77

	Expr1 -> 'if' . Expr 'then' Expr 'else' Expr        (rule 51)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 111
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 78

	Expr1 -> 'if*' . Expr 'then' Expr 'else' Expr       (rule 50)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 110
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 79

	Expr1 -> 'if°' . Expr 'then' Expr 'else' Expr       (rule 49)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 109
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 80

	Expr1 -> 'let' . '{' ListLet '}' 'in' Expr          (rule 52)

	'{'            shift, and enter state 108


State 81

	Expr3 -> '~+' .                                     (rule 35)

	'$'            reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	';'            reduce using rule 35
	'@'            reduce using rule 35
	'else'         reduce using rule 35
	'then'         reduce using rule 35
	'}'            reduce using rule 35
	'~+'           reduce using rule 35
	'~-'           reduce using rule 35
	'~0'           reduce using rule 35
	'~1'           reduce using rule 35
	'~i'           reduce using rule 35
	'~j'           reduce using rule 35
	'∘'            reduce using rule 35
	L_Id           reduce using rule 35
	%eof           reduce using rule 35


State 82

	Expr3 -> '~-' .                                     (rule 36)

	'$'            reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	';'            reduce using rule 36
	'@'            reduce using rule 36
	'else'         reduce using rule 36
	'then'         reduce using rule 36
	'}'            reduce using rule 36
	'~+'           reduce using rule 36
	'~-'           reduce using rule 36
	'~0'           reduce using rule 36
	'~1'           reduce using rule 36
	'~i'           reduce using rule 36
	'~j'           reduce using rule 36
	'∘'            reduce using rule 36
	L_Id           reduce using rule 36
	%eof           reduce using rule 36


State 83

	Expr3 -> '~0' .                                     (rule 34)

	'$'            reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'@'            reduce using rule 34
	'else'         reduce using rule 34
	'then'         reduce using rule 34
	'}'            reduce using rule 34
	'~+'           reduce using rule 34
	'~-'           reduce using rule 34
	'~0'           reduce using rule 34
	'~1'           reduce using rule 34
	'~i'           reduce using rule 34
	'~j'           reduce using rule 34
	'∘'            reduce using rule 34
	L_Id           reduce using rule 34
	%eof           reduce using rule 34


State 84

	Expr3 -> '~1' .                                     (rule 33)

	'$'            reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'+'            reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'@'            reduce using rule 33
	'else'         reduce using rule 33
	'then'         reduce using rule 33
	'}'            reduce using rule 33
	'~+'           reduce using rule 33
	'~-'           reduce using rule 33
	'~0'           reduce using rule 33
	'~1'           reduce using rule 33
	'~i'           reduce using rule 33
	'~j'           reduce using rule 33
	'∘'            reduce using rule 33
	L_Id           reduce using rule 33
	%eof           reduce using rule 33


State 85

	Expr3 -> '~i' .                                     (rule 37)

	'$'            reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	';'            reduce using rule 37
	'@'            reduce using rule 37
	'else'         reduce using rule 37
	'then'         reduce using rule 37
	'}'            reduce using rule 37
	'~+'           reduce using rule 37
	'~-'           reduce using rule 37
	'~0'           reduce using rule 37
	'~1'           reduce using rule 37
	'~i'           reduce using rule 37
	'~j'           reduce using rule 37
	'∘'            reduce using rule 37
	L_Id           reduce using rule 37
	%eof           reduce using rule 37


State 86

	Expr3 -> '~j' .                                     (rule 38)

	'$'            reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	';'            reduce using rule 38
	'@'            reduce using rule 38
	'else'         reduce using rule 38
	'then'         reduce using rule 38
	'}'            reduce using rule 38
	'~+'           reduce using rule 38
	'~-'           reduce using rule 38
	'~0'           reduce using rule 38
	'~1'           reduce using rule 38
	'~i'           reduce using rule 38
	'~j'           reduce using rule 38
	'∘'            reduce using rule 38
	L_Id           reduce using rule 38
	%eof           reduce using rule 38


State 87

	Expr1 -> 'λ' . ListId '.' Expr                      (rule 53)

	L_Id           shift, and enter state 24

	Id             goto state 25
	ListId         goto state 107

State 88

	%start_pExpr -> Expr .                              (rule 7)

	%eof           accept


State 89

	%start_pExpr1 -> Expr1 .                            (rule 6)

	%eof           accept


State 90

	%start_pExpr2 -> Expr2 .                            (rule 5)
	Expr2 -> Expr2 . Expr3                              (rule 41)

	'('            shift, and enter state 91
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	L_Id           shift, and enter state 24
	%eof           accept

	Id             goto state 68
	Expr3          goto state 106

State 91

	Expr3 -> '(' . ListExpr ')'                         (rule 39)
	Expr3 -> '(' . Expr ')'                             (rule 40)

	'('            shift, and enter state 75
	')'            reduce using rule 57
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 104
	ListExpr       goto state 105
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 92

	%start_pExpr3 -> Expr3 .                            (rule 4)

	%eof           accept


State 93

	%start_pListPattern -> ListPattern .                (rule 3)

	%eof           accept


State 94

	ListPattern -> Pattern . ListPattern                (rule 31)

	'('            shift, and enter state 47
	':'            reduce using rule 30
	':='           reduce using rule 30
	L_Id           shift, and enter state 24
	%eof           reduce using rule 30

	Id             goto state 41
	ListPattern    goto state 103
	Pattern        goto state 94
	PatternVar     goto state 46

State 95

	Toplevel -> Id . ListPattern ':=' Expr              (rule 28)
	Toplevel -> Id . ListPattern ':' Type ':=' Expr     (rule 29)

	'('            shift, and enter state 47
	':'            reduce using rule 30
	':='           reduce using rule 30
	L_Id           shift, and enter state 24

	Id             goto state 41
	ListPattern    goto state 102
	Pattern        goto state 94
	PatternVar     goto state 46

State 96

	%start_pToplevel -> Toplevel .                      (rule 2)

	%eof           accept


State 97

	%start_pListToplevel -> ListToplevel .              (rule 1)

	%eof           accept


State 98

	ListToplevel -> Toplevel . ';' ListToplevel         (rule 27)

	';'            shift, and enter state 101


State 99

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 100

	Program -> ListToplevel .                           (rule 25)

	%eof           reduce using rule 25


State 101

	ListToplevel -> Toplevel ';' . ListToplevel         (rule 27)

	L_Id           shift, and enter state 24
	%eof           reduce using rule 26

	Id             goto state 95
	ListToplevel   goto state 167
	Toplevel       goto state 98

State 102

	Toplevel -> Id ListPattern . ':=' Expr              (rule 28)
	Toplevel -> Id ListPattern . ':' Type ':=' Expr     (rule 29)

	':'            shift, and enter state 165
	':='           shift, and enter state 166


State 103

	ListPattern -> Pattern ListPattern .                (rule 31)

	':'            reduce using rule 31
	':='           reduce using rule 31
	%eof           reduce using rule 31


State 104

	Expr3 -> '(' Expr . ')'                             (rule 40)
	ListExpr -> Expr .                                  (rule 58)
	ListExpr -> Expr . ',' ListExpr                     (rule 59)

	')'            shift, and enter state 164
			(reduce using rule 58)

	','            shift, and enter state 115


State 105

	Expr3 -> '(' ListExpr . ')'                         (rule 39)

	')'            shift, and enter state 163


State 106

	Expr2 -> Expr2 Expr3 .                              (rule 41)

	'$'            reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	';'            reduce using rule 41
	'@'            reduce using rule 41
	'else'         reduce using rule 41
	'then'         reduce using rule 41
	'}'            reduce using rule 41
	'~+'           reduce using rule 41
	'~-'           reduce using rule 41
	'~0'           reduce using rule 41
	'~1'           reduce using rule 41
	'~i'           reduce using rule 41
	'~j'           reduce using rule 41
	'∘'            reduce using rule 41
	L_Id           reduce using rule 41
	%eof           reduce using rule 41


State 107

	Expr1 -> 'λ' ListId . '.' Expr                      (rule 53)

	'.'            shift, and enter state 162


State 108

	Expr1 -> 'let' '{' . ListLet '}' 'in' Expr          (rule 52)

	'('            shift, and enter state 47
	L_Id           shift, and enter state 24

	Id             goto state 41
	Let            goto state 64
	ListLet        goto state 161
	Pattern        goto state 66
	PatternVar     goto state 46

State 109

	Expr1 -> 'if°' Expr . 'then' Expr 'else' Expr       (rule 49)

	'then'         shift, and enter state 160


State 110

	Expr1 -> 'if*' Expr . 'then' Expr 'else' Expr       (rule 50)

	'then'         shift, and enter state 159


State 111

	Expr1 -> 'if' Expr . 'then' Expr 'else' Expr        (rule 51)

	'then'         shift, and enter state 158


State 112

	Expr1 -> '\\' ListId . '.' Expr                     (rule 54)

	'.'            shift, and enter state 157


State 113

	Expr1 -> Complex . '*' Expr2 SupOp Complex '*' Expr1    (rule 43)
	Expr1 -> Complex . '*' Expr2                        (rule 45)
	Complex2 -> '(' Complex . ')'                       (rule 74)

	')'            shift, and enter state 148
	'*'            shift, and enter state 114


State 114

	Expr1 -> Complex '*' . Expr2 SupOp Complex '*' Expr1    (rule 43)
	Expr1 -> Complex '*' . Expr2                        (rule 45)

	'('            shift, and enter state 91
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	L_Id           shift, and enter state 24

	Id             goto state 68
	Expr3          goto state 69
	Expr2          goto state 156

State 115

	ListExpr -> Expr ',' . ListExpr                     (rule 59)

	'('            shift, and enter state 75
	')'            reduce using rule 57
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58
	%eof           reduce using rule 57

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 72
	ListExpr       goto state 155
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 116

	Expr1 -> Expr2 SupOp . Expr1                        (rule 44)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 154
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 117

	Expr1 -> Expr2 '$' . Expr1                          (rule 46)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 153
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 118

	Expr1 -> Expr2 '@' . Expr1                          (rule 48)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 152
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 119

	Expr1 -> Expr2 '∘' . Expr1                          (rule 47)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 151
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 120

	Let -> Pattern '=' . Expr                           (rule 60)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 150
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 121

	ListLet -> Let ';' . ListLet                        (rule 62)

	'('            shift, and enter state 47
	L_Id           shift, and enter state 24

	Id             goto state 41
	Let            goto state 64
	ListLet        goto state 149
	Pattern        goto state 66
	PatternVar     goto state 46

State 122

	Complex2 -> '(' Complex . ')'                       (rule 74)

	')'            shift, and enter state 148


State 123

	Complex1 -> Complex2 Complex1 .                     (rule 77)

	')'            reduce using rule 77
	'*'            reduce using rule 77
	%eof           reduce using rule 77


State 124

	Complex1 -> Complex2 '/' . Complex1                 (rule 76)

	'('            shift, and enter state 52
	'-i'           shift, and enter state 53
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'pi'           shift, and enter state 56
	'π'            shift, and enter state 57
	L_Scalar       shift, and enter state 58

	Scalar         goto state 48
	Complex2       goto state 49
	Complex1       goto state 147

State 125

	Complex1 -> Complex2 '^' . Complex1                 (rule 75)

	'('            shift, and enter state 52
	'-i'           shift, and enter state 53
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'pi'           shift, and enter state 56
	'π'            shift, and enter state 57
	L_Scalar       shift, and enter state 58

	Scalar         goto state 48
	Complex2       goto state 49
	Complex1       goto state 146

State 126

	Complex2 -> Scalar '+' . Scalar 'i'                 (rule 65)

	L_Scalar       shift, and enter state 58

	Scalar         goto state 145

State 127

	Complex2 -> Scalar '-' . Scalar 'i'                 (rule 66)

	L_Scalar       shift, and enter state 58

	Scalar         goto state 144

State 128

	Complex2 -> Scalar 'i' .                            (rule 68)

	'('            reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'-i'           reduce using rule 68
	'/'            reduce using rule 68
	'^'            reduce using rule 68
	'e'            reduce using rule 68
	'i'            reduce using rule 68
	'pi'           reduce using rule 68
	'π'            reduce using rule 68
	L_Scalar       reduce using rule 68
	%eof           reduce using rule 68


State 129

	Pattern -> '(' ListPatternVar . ')'                 (rule 81)

	')'            shift, and enter state 143


State 130

	ListPatternVar -> PatternVar ',' . ListPatternVar    (rule 85)

	')'            reduce using rule 83
	L_Id           shift, and enter state 24
	%eof           reduce using rule 83

	Id             goto state 41
	PatternVar     goto state 42
	ListPatternVar goto state 142

State 131

	Type -> '∀' ListId . '.' Mono                       (rule 96)

	'.'            shift, and enter state 141


State 132

	Type -> 'forall' ListId . '.' Mono                  (rule 97)

	'.'            shift, and enter state 140


State 133

	Mono2 -> '(' Mono . ')'                             (rule 90)

	')'            shift, and enter state 139


State 134

	Mono1 -> Mono2 '*' . Mono1                          (rule 91)

	'('            shift, and enter state 32
	'qubit'        shift, and enter state 34
	'unit'         shift, and enter state 35
	'⊤'            shift, and enter state 37
	L_Id           shift, and enter state 24

	Id             goto state 27
	Mono2          goto state 28
	Mono1          goto state 138

State 135

	Mono1 -> Mono2 '->' . Mono1                         (rule 92)

	'('            shift, and enter state 32
	'qubit'        shift, and enter state 34
	'unit'         shift, and enter state 35
	'⊤'            shift, and enter state 37
	L_Id           shift, and enter state 24

	Id             goto state 27
	Mono2          goto state 28
	Mono1          goto state 137

State 136

	ListId -> Id ListId .                               (rule 99)

	'.'            reduce using rule 99
	%eof           reduce using rule 99


State 137

	Mono1 -> Mono2 '->' Mono1 .                         (rule 92)

	')'            reduce using rule 92
	':='           reduce using rule 92
	%eof           reduce using rule 92


State 138

	Mono1 -> Mono2 '*' Mono1 .                          (rule 91)

	')'            reduce using rule 91
	':='           reduce using rule 91
	%eof           reduce using rule 91


State 139

	Mono2 -> '(' Mono ')' .                             (rule 90)

	')'            reduce using rule 90
	'*'            reduce using rule 90
	'->'           reduce using rule 90
	':='           reduce using rule 90
	%eof           reduce using rule 90


State 140

	Type -> 'forall' ListId '.' . Mono                  (rule 97)

	'('            shift, and enter state 32
	'qubit'        shift, and enter state 34
	'unit'         shift, and enter state 35
	'⊤'            shift, and enter state 37
	L_Id           shift, and enter state 24

	Id             goto state 27
	Mono2          goto state 28
	Mono1          goto state 29
	Mono           goto state 180

State 141

	Type -> '∀' ListId '.' . Mono                       (rule 96)

	'('            shift, and enter state 32
	'qubit'        shift, and enter state 34
	'unit'         shift, and enter state 35
	'⊤'            shift, and enter state 37
	L_Id           shift, and enter state 24

	Id             goto state 27
	Mono2          goto state 28
	Mono1          goto state 29
	Mono           goto state 179

State 142

	ListPatternVar -> PatternVar ',' ListPatternVar .    (rule 85)

	')'            reduce using rule 85
	%eof           reduce using rule 85


State 143

	Pattern -> '(' ListPatternVar ')' .                 (rule 81)

	'('            reduce using rule 81
	':'            reduce using rule 81
	':='           reduce using rule 81
	'='            reduce using rule 81
	L_Id           reduce using rule 81
	%eof           reduce using rule 81


State 144

	Complex2 -> Scalar '-' Scalar . 'i'                 (rule 66)

	'i'            shift, and enter state 178


State 145

	Complex2 -> Scalar '+' Scalar . 'i'                 (rule 65)

	'i'            shift, and enter state 177


State 146

	Complex1 -> Complex2 '^' Complex1 .                 (rule 75)

	')'            reduce using rule 75
	'*'            reduce using rule 75
	%eof           reduce using rule 75


State 147

	Complex1 -> Complex2 '/' Complex1 .                 (rule 76)

	')'            reduce using rule 76
	'*'            reduce using rule 76
	%eof           reduce using rule 76


State 148

	Complex2 -> '(' Complex ')' .                       (rule 74)

	'('            reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	'-i'           reduce using rule 74
	'/'            reduce using rule 74
	'^'            reduce using rule 74
	'e'            reduce using rule 74
	'i'            reduce using rule 74
	'pi'           reduce using rule 74
	'π'            reduce using rule 74
	L_Scalar       reduce using rule 74
	%eof           reduce using rule 74


State 149

	ListLet -> Let ';' ListLet .                        (rule 62)

	'}'            reduce using rule 62
	%eof           reduce using rule 62


State 150

	Let -> Pattern '=' Expr .                           (rule 60)

	';'            reduce using rule 60
	'}'            reduce using rule 60
	%eof           reduce using rule 60


State 151

	Expr1 -> Expr2 '∘' Expr1 .                          (rule 47)

	')'            reduce using rule 47
	','            reduce using rule 47
	';'            reduce using rule 47
	'else'         reduce using rule 47
	'then'         reduce using rule 47
	'}'            reduce using rule 47
	%eof           reduce using rule 47


State 152

	Expr1 -> Expr2 '@' Expr1 .                          (rule 48)

	')'            reduce using rule 48
	','            reduce using rule 48
	';'            reduce using rule 48
	'else'         reduce using rule 48
	'then'         reduce using rule 48
	'}'            reduce using rule 48
	%eof           reduce using rule 48


State 153

	Expr1 -> Expr2 '$' Expr1 .                          (rule 46)

	')'            reduce using rule 46
	','            reduce using rule 46
	';'            reduce using rule 46
	'else'         reduce using rule 46
	'then'         reduce using rule 46
	'}'            reduce using rule 46
	%eof           reduce using rule 46


State 154

	Expr1 -> Expr2 SupOp Expr1 .                        (rule 44)

	')'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44
	'else'         reduce using rule 44
	'then'         reduce using rule 44
	'}'            reduce using rule 44
	%eof           reduce using rule 44


State 155

	ListExpr -> Expr ',' ListExpr .                     (rule 59)

	')'            reduce using rule 59
	%eof           reduce using rule 59


State 156

	Expr2 -> Expr2 . Expr3                              (rule 41)
	Expr1 -> Complex '*' Expr2 . SupOp Complex '*' Expr1    (rule 43)
	Expr1 -> Complex '*' Expr2 .                        (rule 45)

	'('            shift, and enter state 91
	')'            reduce using rule 45
	'+'            shift, and enter state 62
	','            reduce using rule 45
	'-'            shift, and enter state 63
	';'            reduce using rule 45
	'else'         reduce using rule 45
	'then'         reduce using rule 45
	'}'            reduce using rule 45
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	L_Id           shift, and enter state 24
	%eof           reduce using rule 45

	Id             goto state 68
	Expr3          goto state 106
	SupOp          goto state 176

State 157

	Expr1 -> '\\' ListId '.' . Expr                     (rule 54)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 175
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 158

	Expr1 -> 'if' Expr 'then' . Expr 'else' Expr        (rule 51)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 174
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 159

	Expr1 -> 'if*' Expr 'then' . Expr 'else' Expr       (rule 50)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 173
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 160

	Expr1 -> 'if°' Expr 'then' . Expr 'else' Expr       (rule 49)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 172
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 161

	Expr1 -> 'let' '{' ListLet . '}' 'in' Expr          (rule 52)

	'}'            shift, and enter state 171


State 162

	Expr1 -> 'λ' ListId '.' . Expr                      (rule 53)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 170
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 163

	Expr3 -> '(' ListExpr ')' .                         (rule 39)

	'$'            reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	';'            reduce using rule 39
	'@'            reduce using rule 39
	'else'         reduce using rule 39
	'then'         reduce using rule 39
	'}'            reduce using rule 39
	'~+'           reduce using rule 39
	'~-'           reduce using rule 39
	'~0'           reduce using rule 39
	'~1'           reduce using rule 39
	'~i'           reduce using rule 39
	'~j'           reduce using rule 39
	'∘'            reduce using rule 39
	L_Id           reduce using rule 39
	%eof           reduce using rule 39


State 164

	Expr3 -> '(' Expr ')' .                             (rule 40)

	'$'            reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	';'            reduce using rule 40
	'@'            reduce using rule 40
	'else'         reduce using rule 40
	'then'         reduce using rule 40
	'}'            reduce using rule 40
	'~+'           reduce using rule 40
	'~-'           reduce using rule 40
	'~0'           reduce using rule 40
	'~1'           reduce using rule 40
	'~i'           reduce using rule 40
	'~j'           reduce using rule 40
	'∘'            reduce using rule 40
	L_Id           reduce using rule 40
	%eof           reduce using rule 40


State 165

	Toplevel -> Id ListPattern ':' . Type ':=' Expr     (rule 29)

	'('            shift, and enter state 32
	'forall'       shift, and enter state 33
	'qubit'        shift, and enter state 34
	'unit'         shift, and enter state 35
	'∀'            shift, and enter state 36
	'⊤'            shift, and enter state 37
	L_Id           shift, and enter state 24

	Id             goto state 27
	Mono2          goto state 28
	Mono1          goto state 29
	Mono           goto state 30
	Type           goto state 169

State 166

	Toplevel -> Id ListPattern ':=' . Expr              (rule 28)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 168
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 167

	ListToplevel -> Toplevel ';' ListToplevel .         (rule 27)

	%eof           reduce using rule 27


State 168

	Toplevel -> Id ListPattern ':=' Expr .              (rule 28)

	';'            reduce using rule 28
	%eof           reduce using rule 28


State 169

	Toplevel -> Id ListPattern ':' Type . ':=' Expr     (rule 29)

	':='           shift, and enter state 186


State 170

	Expr1 -> 'λ' ListId '.' Expr .                      (rule 53)

	')'            reduce using rule 53
	','            reduce using rule 53
	';'            reduce using rule 53
	'else'         reduce using rule 53
	'then'         reduce using rule 53
	'}'            reduce using rule 53
	%eof           reduce using rule 53


State 171

	Expr1 -> 'let' '{' ListLet '}' . 'in' Expr          (rule 52)

	'in'           shift, and enter state 185


State 172

	Expr1 -> 'if°' Expr 'then' Expr . 'else' Expr       (rule 49)

	'else'         shift, and enter state 184


State 173

	Expr1 -> 'if*' Expr 'then' Expr . 'else' Expr       (rule 50)

	'else'         shift, and enter state 183


State 174

	Expr1 -> 'if' Expr 'then' Expr . 'else' Expr        (rule 51)

	'else'         shift, and enter state 182


State 175

	Expr1 -> '\\' ListId '.' Expr .                     (rule 54)

	')'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54
	'else'         reduce using rule 54
	'then'         reduce using rule 54
	'}'            reduce using rule 54
	%eof           reduce using rule 54


State 176

	Expr1 -> Complex '*' Expr2 SupOp . Complex '*' Expr1    (rule 43)

	'('            shift, and enter state 52
	'-i'           shift, and enter state 53
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'pi'           shift, and enter state 56
	'π'            shift, and enter state 57
	L_Scalar       shift, and enter state 58

	Scalar         goto state 48
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 181

State 177

	Complex2 -> Scalar '+' Scalar 'i' .                 (rule 65)

	'('            reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'-i'           reduce using rule 65
	'/'            reduce using rule 65
	'^'            reduce using rule 65
	'e'            reduce using rule 65
	'i'            reduce using rule 65
	'pi'           reduce using rule 65
	'π'            reduce using rule 65
	L_Scalar       reduce using rule 65
	%eof           reduce using rule 65


State 178

	Complex2 -> Scalar '-' Scalar 'i' .                 (rule 66)

	'('            reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'-i'           reduce using rule 66
	'/'            reduce using rule 66
	'^'            reduce using rule 66
	'e'            reduce using rule 66
	'i'            reduce using rule 66
	'pi'           reduce using rule 66
	'π'            reduce using rule 66
	L_Scalar       reduce using rule 66
	%eof           reduce using rule 66


State 179

	Type -> '∀' ListId '.' Mono .                       (rule 96)

	':='           reduce using rule 96
	%eof           reduce using rule 96


State 180

	Type -> 'forall' ListId '.' Mono .                  (rule 97)

	':='           reduce using rule 97
	%eof           reduce using rule 97


State 181

	Expr1 -> Complex '*' Expr2 SupOp Complex . '*' Expr1    (rule 43)

	'*'            shift, and enter state 192


State 182

	Expr1 -> 'if' Expr 'then' Expr 'else' . Expr        (rule 51)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 191
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 183

	Expr1 -> 'if*' Expr 'then' Expr 'else' . Expr       (rule 50)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 190
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 184

	Expr1 -> 'if°' Expr 'then' Expr 'else' . Expr       (rule 49)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 189
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 185

	Expr1 -> 'let' '{' ListLet '}' 'in' . Expr          (rule 52)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 188
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 186

	Toplevel -> Id ListPattern ':' Type ':=' . Expr     (rule 29)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 71
	Expr           goto state 187
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 187

	Toplevel -> Id ListPattern ':' Type ':=' Expr .     (rule 29)

	';'            reduce using rule 29
	%eof           reduce using rule 29


State 188

	Expr1 -> 'let' '{' ListLet '}' 'in' Expr .          (rule 52)

	')'            reduce using rule 52
	','            reduce using rule 52
	';'            reduce using rule 52
	'else'         reduce using rule 52
	'then'         reduce using rule 52
	'}'            reduce using rule 52
	%eof           reduce using rule 52


State 189

	Expr1 -> 'if°' Expr 'then' Expr 'else' Expr .       (rule 49)

	')'            reduce using rule 49
	','            reduce using rule 49
	';'            reduce using rule 49
	'else'         reduce using rule 49
	'then'         reduce using rule 49
	'}'            reduce using rule 49
	%eof           reduce using rule 49


State 190

	Expr1 -> 'if*' Expr 'then' Expr 'else' Expr .       (rule 50)

	')'            reduce using rule 50
	','            reduce using rule 50
	';'            reduce using rule 50
	'else'         reduce using rule 50
	'then'         reduce using rule 50
	'}'            reduce using rule 50
	%eof           reduce using rule 50


State 191

	Expr1 -> 'if' Expr 'then' Expr 'else' Expr .        (rule 51)

	')'            reduce using rule 51
	','            reduce using rule 51
	';'            reduce using rule 51
	'else'         reduce using rule 51
	'then'         reduce using rule 51
	'}'            reduce using rule 51
	%eof           reduce using rule 51


State 192

	Expr1 -> Complex '*' Expr2 SupOp Complex '*' . Expr1    (rule 43)

	'('            shift, and enter state 75
	'-i'           shift, and enter state 53
	'\\'           shift, and enter state 76
	'e'            shift, and enter state 54
	'i'            shift, and enter state 55
	'if'           shift, and enter state 77
	'if*'          shift, and enter state 78
	'if°'          shift, and enter state 79
	'let'          shift, and enter state 80
	'pi'           shift, and enter state 56
	'~+'           shift, and enter state 81
	'~-'           shift, and enter state 82
	'~0'           shift, and enter state 83
	'~1'           shift, and enter state 84
	'~i'           shift, and enter state 85
	'~j'           shift, and enter state 86
	'λ'            shift, and enter state 87
	'π'            shift, and enter state 57
	L_Id           shift, and enter state 24
	L_Scalar       shift, and enter state 58

	Id             goto state 68
	Scalar         goto state 48
	Expr3          goto state 69
	Expr2          goto state 70
	Expr1          goto state 193
	Complex2       goto state 49
	Complex1       goto state 50
	Complex        goto state 74

State 193

	Expr1 -> Complex '*' Expr2 SupOp Complex '*' Expr1 .    (rule 43)

	')'            reduce using rule 43
	','            reduce using rule 43
	';'            reduce using rule 43
	'else'         reduce using rule 43
	'then'         reduce using rule 43
	'}'            reduce using rule 43
	%eof           reduce using rule 43


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 100
Number of terminals: 46
Number of non-terminals: 48
Number of states: 194
