-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Frontend/Signe/Par.y
-----------------------------------------------------------------------------

state 47 contains 1 shift/reduce conflicts.
state 106 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pListToplevel -> ListToplevel               (1)
	%start_pToplevel -> Toplevel                       (2)
	%start_pListPattern -> ListPattern                 (3)
	%start_pExpr3 -> Expr3                             (4)
	%start_pExpr2 -> Expr2                             (5)
	%start_pExpr1 -> Expr1                             (6)
	%start_pExpr -> Expr                               (7)
	%start_pListExpr -> ListExpr                       (8)
	%start_pLet -> Let                                 (9)
	%start_pListLet -> ListLet                         (10)
	%start_pComplex2 -> Complex2                       (11)
	%start_pComplex1 -> Complex1                       (12)
	%start_pComplex -> Complex                         (13)
	%start_pPattern -> Pattern                         (14)
	%start_pPatternVar -> PatternVar                   (15)
	%start_pListPatternVar -> ListPatternVar           (16)
	%start_pMono2 -> Mono2                             (17)
	%start_pMono1 -> Mono1                             (18)
	%start_pMono -> Mono                               (19)
	%start_pType -> Type                               (20)
	%start_pListId -> ListId                           (21)
	Id -> L_Id                                         (22)
	Scalar -> L_Scalar                                 (23)
	Program -> ListToplevel                            (24)
	ListToplevel ->                                    (25)
	ListToplevel -> Toplevel ';' ListToplevel          (26)
	Toplevel -> Id ListPattern ':=' Expr               (27)
	Toplevel -> Id ListPattern ':' Type ':=' Expr      (28)
	ListPattern ->                                     (29)
	ListPattern -> Pattern ListPattern                 (30)
	Expr3 -> Id                                        (31)
	Expr3 -> '~1'                                      (32)
	Expr3 -> '~0'                                      (33)
	Expr3 -> '~+'                                      (34)
	Expr3 -> '~-'                                      (35)
	Expr3 -> '~i'                                      (36)
	Expr3 -> '~j'                                      (37)
	Expr3 -> '(' ListExpr ')'                          (38)
	Expr3 -> Complex '*' Expr3                         (39)
	Expr3 -> '(' Expr ')'                              (40)
	Expr2 -> Expr2 Expr3                               (41)
	Expr2 -> Expr3                                     (42)
	Expr1 -> Expr2 '+' Expr1                           (43)
	Expr1 -> Expr2 '-' Expr1                           (44)
	Expr1 -> Expr2 '$' Expr1                           (45)
	Expr1 -> Expr2 '∘' Expr1                           (46)
	Expr1 -> Expr2 '@' Expr1                           (47)
	Expr1 -> 'if°' Expr 'then' Expr 'else' Expr        (48)
	Expr1 -> 'if*' Expr 'then' Expr 'else' Expr        (49)
	Expr1 -> 'if' Expr 'then' Expr 'else' Expr         (50)
	Expr1 -> 'let' '{' ListLet '}' 'in' Expr           (51)
	Expr1 -> 'λ' ListId '.' Expr                       (52)
	Expr1 -> '\\' ListId '.' Expr                      (53)
	Expr1 -> Expr2                                     (54)
	Expr -> Expr1                                      (55)
	ListExpr ->                                        (56)
	ListExpr -> Expr                                   (57)
	ListExpr -> Expr ',' ListExpr                      (58)
	Let -> Pattern '=' Expr                            (59)
	ListLet -> Let                                     (60)
	ListLet -> Let ';' ListLet                         (61)
	Complex2 -> Scalar '+' Scalar 'i'                  (62)
	Complex2 -> Scalar '-' Scalar 'i'                  (63)
	Complex2 -> Scalar                                 (64)
	Complex2 -> Scalar 'i'                             (65)
	Complex2 -> '-i'                                   (66)
	Complex2 -> 'i'                                    (67)
	Complex2 -> 'π'                                    (68)
	Complex2 -> 'pi'                                   (69)
	Complex2 -> 'e'                                    (70)
	Complex2 -> '(' Complex ')'                        (71)
	Complex1 -> Complex2 '^' Complex1                  (72)
	Complex1 -> Complex2 '/' Complex1                  (73)
	Complex1 -> Complex2 Complex1                      (74)
	Complex1 -> Complex2                               (75)
	Complex -> Complex1                                (76)
	Pattern -> PatternVar                              (77)
	Pattern -> '(' ListPatternVar ')'                  (78)
	PatternVar -> Id                                   (79)
	ListPatternVar ->                                  (80)
	ListPatternVar -> PatternVar                       (81)
	ListPatternVar -> PatternVar ',' ListPatternVar    (82)
	Mono2 -> Id                                        (83)
	Mono2 -> 'qubit'                                   (84)
	Mono2 -> '⊤'                                       (85)
	Mono2 -> 'unit'                                    (86)
	Mono2 -> '(' Mono ')'                              (87)
	Mono1 -> Mono2 '*' Mono1                           (88)
	Mono1 -> Mono2 '->' Mono1                          (89)
	Mono1 -> Mono2                                     (90)
	Mono -> Mono1                                      (91)
	Type -> Mono                                       (92)
	Type -> '∀' ListId '.' Mono                        (93)
	Type -> 'forall' ListId '.' Mono                   (94)
	ListId -> Id                                       (95)
	ListId -> Id ListId                                (96)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'$'            { PT _ (TS _ 1) }
	'('            { PT _ (TS _ 2) }
	')'            { PT _ (TS _ 3) }
	'*'            { PT _ (TS _ 4) }
	'+'            { PT _ (TS _ 5) }
	','            { PT _ (TS _ 6) }
	'-'            { PT _ (TS _ 7) }
	'->'           { PT _ (TS _ 8) }
	'-i'           { PT _ (TS _ 9) }
	'.'            { PT _ (TS _ 10) }
	'/'            { PT _ (TS _ 11) }
	':'            { PT _ (TS _ 12) }
	':='           { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'='            { PT _ (TS _ 15) }
	'@'            { PT _ (TS _ 16) }
	'\\'           { PT _ (TS _ 17) }
	'^'            { PT _ (TS _ 18) }
	'e'            { PT _ (TS _ 19) }
	'else'         { PT _ (TS _ 20) }
	'forall'       { PT _ (TS _ 21) }
	'i'            { PT _ (TS _ 22) }
	'if'           { PT _ (TS _ 23) }
	'if*'          { PT _ (TS _ 24) }
	'if°'          { PT _ (TS _ 25) }
	'in'           { PT _ (TS _ 26) }
	'let'          { PT _ (TS _ 27) }
	'pi'           { PT _ (TS _ 28) }
	'qubit'        { PT _ (TS _ 29) }
	'then'         { PT _ (TS _ 30) }
	'unit'         { PT _ (TS _ 31) }
	'{'            { PT _ (TS _ 32) }
	'}'            { PT _ (TS _ 33) }
	'~+'           { PT _ (TS _ 34) }
	'~-'           { PT _ (TS _ 35) }
	'~0'           { PT _ (TS _ 36) }
	'~1'           { PT _ (TS _ 37) }
	'~i'           { PT _ (TS _ 38) }
	'~j'           { PT _ (TS _ 39) }
	'λ'            { PT _ (TS _ 40) }
	'π'            { PT _ (TS _ 41) }
	'∀'            { PT _ (TS _ 42) }
	'∘'            { PT _ (TS _ 43) }
	'⊤'            { PT _ (TS _ 44) }
	L_Id           { PT _ (T_Id _) }
	L_Scalar       { PT _ (T_Scalar $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pListToplevel rule  1
	%start_pToplevel rule  2
	%start_pListPattern rule  3
	%start_pExpr3   rule  4
	%start_pExpr2   rule  5
	%start_pExpr1   rule  6
	%start_pExpr    rule  7
	%start_pListExpr rule  8
	%start_pLet     rule  9
	%start_pListLet rule  10
	%start_pComplex2 rule  11
	%start_pComplex1 rule  12
	%start_pComplex rule  13
	%start_pPattern rule  14
	%start_pPatternVar rule  15
	%start_pListPatternVar rule  16
	%start_pMono2   rule  17
	%start_pMono1   rule  18
	%start_pMono    rule  19
	%start_pType    rule  20
	%start_pListId  rule  21
	Id              rule  22
	Scalar          rule  23
	Program         rule  24
	ListToplevel    rules 25, 26
	Toplevel        rules 27, 28
	ListPattern     rules 29, 30
	Expr3           rules 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
	Expr2           rules 41, 42
	Expr1           rules 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54
	Expr            rule  55
	ListExpr        rules 56, 57, 58
	Let             rule  59
	ListLet         rules 60, 61
	Complex2        rules 62, 63, 64, 65, 66, 67, 68, 69, 70, 71
	Complex1        rules 72, 73, 74, 75
	Complex         rule  76
	Pattern         rules 77, 78
	PatternVar      rule  79
	ListPatternVar  rules 80, 81, 82
	Mono2           rules 83, 84, 85, 86, 87
	Mono1           rules 88, 89, 90
	Mono            rule  91
	Type            rules 92, 93, 94
	ListId          rules 95, 96

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	L_Id           shift, and enter state 23
	%eof           reduce using rule 25

	Id             goto state 90
	Program        goto state 94
	ListToplevel   goto state 95
	Toplevel       goto state 93

State 1

	%start_pListToplevel -> . ListToplevel              (rule 1)

	L_Id           shift, and enter state 23
	%eof           reduce using rule 25

	Id             goto state 90
	ListToplevel   goto state 92
	Toplevel       goto state 93

State 2

	%start_pToplevel -> . Toplevel                      (rule 2)

	L_Id           shift, and enter state 23

	Id             goto state 90
	Toplevel       goto state 91

State 3

	%start_pListPattern -> . ListPattern                (rule 3)

	'('            shift, and enter state 46
	L_Id           shift, and enter state 23
	%eof           reduce using rule 29

	Id             goto state 40
	ListPattern    goto state 88
	Pattern        goto state 89
	PatternVar     goto state 45

State 4

	%start_pExpr3 -> . Expr3                            (rule 4)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 87
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 5

	%start_pExpr2 -> . Expr2                            (rule 5)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 86
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 6

	%start_pExpr1 -> . Expr1                            (rule 6)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 85
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 7

	%start_pExpr -> . Expr                              (rule 7)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 84
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 8

	%start_pListExpr -> . ListExpr                      (rule 8)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57
	%eof           reduce using rule 56

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 68
	ListExpr       goto state 69
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 9

	%start_pLet -> . Let                                (rule 9)

	'('            shift, and enter state 46
	L_Id           shift, and enter state 23

	Id             goto state 40
	Let            goto state 63
	Pattern        goto state 62
	PatternVar     goto state 45

State 10

	%start_pListLet -> . ListLet                        (rule 10)

	'('            shift, and enter state 46
	L_Id           shift, and enter state 23

	Id             goto state 40
	Let            goto state 60
	ListLet        goto state 61
	Pattern        goto state 62
	PatternVar     goto state 45

State 11

	%start_pComplex2 -> . Complex2                      (rule 11)

	'('            shift, and enter state 51
	'-i'           shift, and enter state 52
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'pi'           shift, and enter state 55
	'π'            shift, and enter state 56
	L_Scalar       shift, and enter state 57

	Scalar         goto state 47
	Complex2       goto state 59

State 12

	%start_pComplex1 -> . Complex1                      (rule 12)

	'('            shift, and enter state 51
	'-i'           shift, and enter state 52
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'pi'           shift, and enter state 55
	'π'            shift, and enter state 56
	L_Scalar       shift, and enter state 57

	Scalar         goto state 47
	Complex2       goto state 48
	Complex1       goto state 58

State 13

	%start_pComplex -> . Complex                        (rule 13)

	'('            shift, and enter state 51
	'-i'           shift, and enter state 52
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'pi'           shift, and enter state 55
	'π'            shift, and enter state 56
	L_Scalar       shift, and enter state 57

	Scalar         goto state 47
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 50

State 14

	%start_pPattern -> . Pattern                        (rule 14)

	'('            shift, and enter state 46
	L_Id           shift, and enter state 23

	Id             goto state 40
	Pattern        goto state 44
	PatternVar     goto state 45

State 15

	%start_pPatternVar -> . PatternVar                  (rule 15)

	L_Id           shift, and enter state 23

	Id             goto state 40
	PatternVar     goto state 43

State 16

	%start_pListPatternVar -> . ListPatternVar          (rule 16)

	L_Id           shift, and enter state 23
	%eof           reduce using rule 80

	Id             goto state 40
	PatternVar     goto state 41
	ListPatternVar goto state 42

State 17

	%start_pMono2 -> . Mono2                            (rule 17)

	'('            shift, and enter state 31
	'qubit'        shift, and enter state 33
	'unit'         shift, and enter state 34
	'⊤'            shift, and enter state 36
	L_Id           shift, and enter state 23

	Id             goto state 26
	Mono2          goto state 39

State 18

	%start_pMono1 -> . Mono1                            (rule 18)

	'('            shift, and enter state 31
	'qubit'        shift, and enter state 33
	'unit'         shift, and enter state 34
	'⊤'            shift, and enter state 36
	L_Id           shift, and enter state 23

	Id             goto state 26
	Mono2          goto state 27
	Mono1          goto state 38

State 19

	%start_pMono -> . Mono                              (rule 19)

	'('            shift, and enter state 31
	'qubit'        shift, and enter state 33
	'unit'         shift, and enter state 34
	'⊤'            shift, and enter state 36
	L_Id           shift, and enter state 23

	Id             goto state 26
	Mono2          goto state 27
	Mono1          goto state 28
	Mono           goto state 37

State 20

	%start_pType -> . Type                              (rule 20)

	'('            shift, and enter state 31
	'forall'       shift, and enter state 32
	'qubit'        shift, and enter state 33
	'unit'         shift, and enter state 34
	'∀'            shift, and enter state 35
	'⊤'            shift, and enter state 36
	L_Id           shift, and enter state 23

	Id             goto state 26
	Mono2          goto state 27
	Mono1          goto state 28
	Mono           goto state 29
	Type           goto state 30

State 21

	%start_pListId -> . ListId                          (rule 21)

	L_Id           shift, and enter state 23

	Id             goto state 24
	ListId         goto state 25

State 22

	Id -> . L_Id                                        (rule 22)

	L_Id           shift, and enter state 23


State 23

	Id -> L_Id .                                        (rule 22)

	'$'            reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	'*'            reduce using rule 22
	'+'            reduce using rule 22
	','            reduce using rule 22
	'-'            reduce using rule 22
	'->'           reduce using rule 22
	'-i'           reduce using rule 22
	'.'            reduce using rule 22
	':'            reduce using rule 22
	':='           reduce using rule 22
	';'            reduce using rule 22
	'='            reduce using rule 22
	'@'            reduce using rule 22
	'e'            reduce using rule 22
	'else'         reduce using rule 22
	'i'            reduce using rule 22
	'pi'           reduce using rule 22
	'then'         reduce using rule 22
	'}'            reduce using rule 22
	'~+'           reduce using rule 22
	'~-'           reduce using rule 22
	'~0'           reduce using rule 22
	'~1'           reduce using rule 22
	'~i'           reduce using rule 22
	'~j'           reduce using rule 22
	'π'            reduce using rule 22
	'∘'            reduce using rule 22
	L_Id           reduce using rule 22
	L_Scalar       reduce using rule 22
	%eof           reduce using rule 22


State 24

	ListId -> Id .                                      (rule 95)
	ListId -> Id . ListId                               (rule 96)

	'.'            reduce using rule 95
	L_Id           shift, and enter state 23
	%eof           reduce using rule 95

	Id             goto state 24
	ListId         goto state 132

State 25

	%start_pListId -> ListId .                          (rule 21)

	%eof           accept


State 26

	Mono2 -> Id .                                       (rule 83)

	')'            reduce using rule 83
	'*'            reduce using rule 83
	'->'           reduce using rule 83
	':='           reduce using rule 83
	%eof           reduce using rule 83


State 27

	Mono1 -> Mono2 . '*' Mono1                          (rule 88)
	Mono1 -> Mono2 . '->' Mono1                         (rule 89)
	Mono1 -> Mono2 .                                    (rule 90)

	')'            reduce using rule 90
	'*'            shift, and enter state 130
	'->'           shift, and enter state 131
	':='           reduce using rule 90
	%eof           reduce using rule 90


State 28

	Mono -> Mono1 .                                     (rule 91)

	')'            reduce using rule 91
	':='           reduce using rule 91
	%eof           reduce using rule 91


State 29

	Type -> Mono .                                      (rule 92)

	':='           reduce using rule 92
	%eof           reduce using rule 92


State 30

	%start_pType -> Type .                              (rule 20)

	%eof           accept


State 31

	Mono2 -> '(' . Mono ')'                             (rule 87)

	'('            shift, and enter state 31
	'qubit'        shift, and enter state 33
	'unit'         shift, and enter state 34
	'⊤'            shift, and enter state 36
	L_Id           shift, and enter state 23

	Id             goto state 26
	Mono2          goto state 27
	Mono1          goto state 28
	Mono           goto state 129

State 32

	Type -> 'forall' . ListId '.' Mono                  (rule 94)

	L_Id           shift, and enter state 23

	Id             goto state 24
	ListId         goto state 128

State 33

	Mono2 -> 'qubit' .                                  (rule 84)

	')'            reduce using rule 84
	'*'            reduce using rule 84
	'->'           reduce using rule 84
	':='           reduce using rule 84
	%eof           reduce using rule 84


State 34

	Mono2 -> 'unit' .                                   (rule 86)

	')'            reduce using rule 86
	'*'            reduce using rule 86
	'->'           reduce using rule 86
	':='           reduce using rule 86
	%eof           reduce using rule 86


State 35

	Type -> '∀' . ListId '.' Mono                       (rule 93)

	L_Id           shift, and enter state 23

	Id             goto state 24
	ListId         goto state 127

State 36

	Mono2 -> '⊤' .                                      (rule 85)

	')'            reduce using rule 85
	'*'            reduce using rule 85
	'->'           reduce using rule 85
	':='           reduce using rule 85
	%eof           reduce using rule 85


State 37

	%start_pMono -> Mono .                              (rule 19)

	%eof           accept


State 38

	%start_pMono1 -> Mono1 .                            (rule 18)

	%eof           accept


State 39

	%start_pMono2 -> Mono2 .                            (rule 17)

	%eof           accept


State 40

	PatternVar -> Id .                                  (rule 79)

	'('            reduce using rule 79
	')'            reduce using rule 79
	','            reduce using rule 79
	':'            reduce using rule 79
	':='           reduce using rule 79
	'='            reduce using rule 79
	L_Id           reduce using rule 79
	%eof           reduce using rule 79


State 41

	ListPatternVar -> PatternVar .                      (rule 81)
	ListPatternVar -> PatternVar . ',' ListPatternVar    (rule 82)

	')'            reduce using rule 81
	','            shift, and enter state 126
	%eof           reduce using rule 81


State 42

	%start_pListPatternVar -> ListPatternVar .          (rule 16)

	%eof           accept


State 43

	%start_pPatternVar -> PatternVar .                  (rule 15)

	%eof           accept


State 44

	%start_pPattern -> Pattern .                        (rule 14)

	%eof           accept


State 45

	Pattern -> PatternVar .                             (rule 77)

	'('            reduce using rule 77
	':'            reduce using rule 77
	':='           reduce using rule 77
	'='            reduce using rule 77
	L_Id           reduce using rule 77
	%eof           reduce using rule 77


State 46

	Pattern -> '(' . ListPatternVar ')'                 (rule 78)

	')'            reduce using rule 80
	L_Id           shift, and enter state 23

	Id             goto state 40
	PatternVar     goto state 41
	ListPatternVar goto state 125

State 47

	Complex2 -> Scalar . '+' Scalar 'i'                 (rule 62)
	Complex2 -> Scalar . '-' Scalar 'i'                 (rule 63)
	Complex2 -> Scalar .                                (rule 64)
	Complex2 -> Scalar . 'i'                            (rule 65)

	'('            reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            shift, and enter state 122
	'-'            shift, and enter state 123
	'-i'           reduce using rule 64
	'/'            reduce using rule 64
	'^'            reduce using rule 64
	'e'            reduce using rule 64
	'i'            shift, and enter state 124
			(reduce using rule 64)

	'pi'           reduce using rule 64
	'π'            reduce using rule 64
	L_Scalar       reduce using rule 64
	%eof           reduce using rule 64


State 48

	Complex1 -> Complex2 . '^' Complex1                 (rule 72)
	Complex1 -> Complex2 . '/' Complex1                 (rule 73)
	Complex1 -> Complex2 . Complex1                     (rule 74)
	Complex1 -> Complex2 .                              (rule 75)

	'('            shift, and enter state 51
	')'            reduce using rule 75
	'*'            reduce using rule 75
	'-i'           shift, and enter state 52
	'/'            shift, and enter state 120
	'^'            shift, and enter state 121
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'pi'           shift, and enter state 55
	'π'            shift, and enter state 56
	L_Scalar       shift, and enter state 57
	%eof           reduce using rule 75

	Scalar         goto state 47
	Complex2       goto state 48
	Complex1       goto state 119

State 49

	Complex -> Complex1 .                               (rule 76)

	')'            reduce using rule 76
	'*'            reduce using rule 76
	%eof           reduce using rule 76


State 50

	%start_pComplex -> Complex .                        (rule 13)

	%eof           accept


State 51

	Complex2 -> '(' . Complex ')'                       (rule 71)

	'('            shift, and enter state 51
	'-i'           shift, and enter state 52
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'pi'           shift, and enter state 55
	'π'            shift, and enter state 56
	L_Scalar       shift, and enter state 57

	Scalar         goto state 47
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 118

State 52

	Complex2 -> '-i' .                                  (rule 66)

	'('            reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'-i'           reduce using rule 66
	'/'            reduce using rule 66
	'^'            reduce using rule 66
	'e'            reduce using rule 66
	'i'            reduce using rule 66
	'pi'           reduce using rule 66
	'π'            reduce using rule 66
	L_Scalar       reduce using rule 66
	%eof           reduce using rule 66


State 53

	Complex2 -> 'e' .                                   (rule 70)

	'('            reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'-i'           reduce using rule 70
	'/'            reduce using rule 70
	'^'            reduce using rule 70
	'e'            reduce using rule 70
	'i'            reduce using rule 70
	'pi'           reduce using rule 70
	'π'            reduce using rule 70
	L_Scalar       reduce using rule 70
	%eof           reduce using rule 70


State 54

	Complex2 -> 'i' .                                   (rule 67)

	'('            reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'-i'           reduce using rule 67
	'/'            reduce using rule 67
	'^'            reduce using rule 67
	'e'            reduce using rule 67
	'i'            reduce using rule 67
	'pi'           reduce using rule 67
	'π'            reduce using rule 67
	L_Scalar       reduce using rule 67
	%eof           reduce using rule 67


State 55

	Complex2 -> 'pi' .                                  (rule 69)

	'('            reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	'-i'           reduce using rule 69
	'/'            reduce using rule 69
	'^'            reduce using rule 69
	'e'            reduce using rule 69
	'i'            reduce using rule 69
	'pi'           reduce using rule 69
	'π'            reduce using rule 69
	L_Scalar       reduce using rule 69
	%eof           reduce using rule 69


State 56

	Complex2 -> 'π' .                                   (rule 68)

	'('            reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'-i'           reduce using rule 68
	'/'            reduce using rule 68
	'^'            reduce using rule 68
	'e'            reduce using rule 68
	'i'            reduce using rule 68
	'pi'           reduce using rule 68
	'π'            reduce using rule 68
	L_Scalar       reduce using rule 68
	%eof           reduce using rule 68


State 57

	Scalar -> L_Scalar .                                (rule 23)

	'('            reduce using rule 23
	')'            reduce using rule 23
	'*'            reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'-i'           reduce using rule 23
	'/'            reduce using rule 23
	'^'            reduce using rule 23
	'e'            reduce using rule 23
	'i'            reduce using rule 23
	'pi'           reduce using rule 23
	'π'            reduce using rule 23
	L_Scalar       reduce using rule 23
	%eof           reduce using rule 23


State 58

	%start_pComplex1 -> Complex1 .                      (rule 12)

	%eof           accept


State 59

	%start_pComplex2 -> Complex2 .                      (rule 11)

	%eof           accept


State 60

	ListLet -> Let .                                    (rule 60)
	ListLet -> Let . ';' ListLet                        (rule 61)

	';'            shift, and enter state 117
	'}'            reduce using rule 60
	%eof           reduce using rule 60


State 61

	%start_pListLet -> ListLet .                        (rule 10)

	%eof           accept


State 62

	Let -> Pattern . '=' Expr                           (rule 59)

	'='            shift, and enter state 116


State 63

	%start_pLet -> Let .                                (rule 9)

	%eof           accept


State 64

	Expr3 -> Id .                                       (rule 31)

	'$'            reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'+'            reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'-i'           reduce using rule 31
	';'            reduce using rule 31
	'@'            reduce using rule 31
	'e'            reduce using rule 31
	'else'         reduce using rule 31
	'i'            reduce using rule 31
	'pi'           reduce using rule 31
	'then'         reduce using rule 31
	'}'            reduce using rule 31
	'~+'           reduce using rule 31
	'~-'           reduce using rule 31
	'~0'           reduce using rule 31
	'~1'           reduce using rule 31
	'~i'           reduce using rule 31
	'~j'           reduce using rule 31
	'π'            reduce using rule 31
	'∘'            reduce using rule 31
	L_Id           reduce using rule 31
	L_Scalar       reduce using rule 31
	%eof           reduce using rule 31


State 65

	Expr2 -> Expr3 .                                    (rule 42)

	'$'            reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'-i'           reduce using rule 42
	';'            reduce using rule 42
	'@'            reduce using rule 42
	'e'            reduce using rule 42
	'else'         reduce using rule 42
	'i'            reduce using rule 42
	'pi'           reduce using rule 42
	'then'         reduce using rule 42
	'}'            reduce using rule 42
	'~+'           reduce using rule 42
	'~-'           reduce using rule 42
	'~0'           reduce using rule 42
	'~1'           reduce using rule 42
	'~i'           reduce using rule 42
	'~j'           reduce using rule 42
	'π'            reduce using rule 42
	'∘'            reduce using rule 42
	L_Id           reduce using rule 42
	L_Scalar       reduce using rule 42
	%eof           reduce using rule 42


State 66

	Expr2 -> Expr2 . Expr3                              (rule 41)
	Expr1 -> Expr2 . '+' Expr1                          (rule 43)
	Expr1 -> Expr2 . '-' Expr1                          (rule 44)
	Expr1 -> Expr2 . '$' Expr1                          (rule 45)
	Expr1 -> Expr2 . '∘' Expr1                          (rule 46)
	Expr1 -> Expr2 . '@' Expr1                          (rule 47)
	Expr1 -> Expr2 .                                    (rule 54)

	'$'            shift, and enter state 111
	'('            shift, and enter state 71
	')'            reduce using rule 54
	'+'            shift, and enter state 112
	','            reduce using rule 54
	'-'            shift, and enter state 113
	'-i'           shift, and enter state 52
	';'            reduce using rule 54
	'@'            shift, and enter state 114
	'e'            shift, and enter state 53
	'else'         reduce using rule 54
	'i'            shift, and enter state 54
	'pi'           shift, and enter state 55
	'then'         reduce using rule 54
	'}'            reduce using rule 54
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'π'            shift, and enter state 56
	'∘'            shift, and enter state 115
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57
	%eof           reduce using rule 54

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 99
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 67

	Expr -> Expr1 .                                     (rule 55)

	')'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	'else'         reduce using rule 55
	'then'         reduce using rule 55
	'}'            reduce using rule 55
	%eof           reduce using rule 55


State 68

	ListExpr -> Expr .                                  (rule 57)
	ListExpr -> Expr . ',' ListExpr                     (rule 58)

	')'            reduce using rule 57
	','            shift, and enter state 110
	%eof           reduce using rule 57


State 69

	%start_pListExpr -> ListExpr .                      (rule 8)

	%eof           accept


State 70

	Expr3 -> Complex . '*' Expr3                        (rule 39)

	'*'            shift, and enter state 109


State 71

	Expr3 -> '(' . ListExpr ')'                         (rule 38)
	Expr3 -> '(' . Expr ')'                             (rule 40)
	Complex2 -> '(' . Complex ')'                       (rule 71)

	'('            shift, and enter state 71
	')'            reduce using rule 56
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 106
	ListExpr       goto state 107
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 108

State 72

	Expr1 -> '\\' . ListId '.' Expr                     (rule 53)

	L_Id           shift, and enter state 23

	Id             goto state 24
	ListId         goto state 105

State 73

	Expr1 -> 'if' . Expr 'then' Expr 'else' Expr        (rule 50)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 104
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 74

	Expr1 -> 'if*' . Expr 'then' Expr 'else' Expr       (rule 49)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 103
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 75

	Expr1 -> 'if°' . Expr 'then' Expr 'else' Expr       (rule 48)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 102
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 76

	Expr1 -> 'let' . '{' ListLet '}' 'in' Expr          (rule 51)

	'{'            shift, and enter state 101


State 77

	Expr3 -> '~+' .                                     (rule 34)

	'$'            reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'-i'           reduce using rule 34
	';'            reduce using rule 34
	'@'            reduce using rule 34
	'e'            reduce using rule 34
	'else'         reduce using rule 34
	'i'            reduce using rule 34
	'pi'           reduce using rule 34
	'then'         reduce using rule 34
	'}'            reduce using rule 34
	'~+'           reduce using rule 34
	'~-'           reduce using rule 34
	'~0'           reduce using rule 34
	'~1'           reduce using rule 34
	'~i'           reduce using rule 34
	'~j'           reduce using rule 34
	'π'            reduce using rule 34
	'∘'            reduce using rule 34
	L_Id           reduce using rule 34
	L_Scalar       reduce using rule 34
	%eof           reduce using rule 34


State 78

	Expr3 -> '~-' .                                     (rule 35)

	'$'            reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'-i'           reduce using rule 35
	';'            reduce using rule 35
	'@'            reduce using rule 35
	'e'            reduce using rule 35
	'else'         reduce using rule 35
	'i'            reduce using rule 35
	'pi'           reduce using rule 35
	'then'         reduce using rule 35
	'}'            reduce using rule 35
	'~+'           reduce using rule 35
	'~-'           reduce using rule 35
	'~0'           reduce using rule 35
	'~1'           reduce using rule 35
	'~i'           reduce using rule 35
	'~j'           reduce using rule 35
	'π'            reduce using rule 35
	'∘'            reduce using rule 35
	L_Id           reduce using rule 35
	L_Scalar       reduce using rule 35
	%eof           reduce using rule 35


State 79

	Expr3 -> '~0' .                                     (rule 33)

	'$'            reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'+'            reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'-i'           reduce using rule 33
	';'            reduce using rule 33
	'@'            reduce using rule 33
	'e'            reduce using rule 33
	'else'         reduce using rule 33
	'i'            reduce using rule 33
	'pi'           reduce using rule 33
	'then'         reduce using rule 33
	'}'            reduce using rule 33
	'~+'           reduce using rule 33
	'~-'           reduce using rule 33
	'~0'           reduce using rule 33
	'~1'           reduce using rule 33
	'~i'           reduce using rule 33
	'~j'           reduce using rule 33
	'π'            reduce using rule 33
	'∘'            reduce using rule 33
	L_Id           reduce using rule 33
	L_Scalar       reduce using rule 33
	%eof           reduce using rule 33


State 80

	Expr3 -> '~1' .                                     (rule 32)

	'$'            reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'+'            reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'-i'           reduce using rule 32
	';'            reduce using rule 32
	'@'            reduce using rule 32
	'e'            reduce using rule 32
	'else'         reduce using rule 32
	'i'            reduce using rule 32
	'pi'           reduce using rule 32
	'then'         reduce using rule 32
	'}'            reduce using rule 32
	'~+'           reduce using rule 32
	'~-'           reduce using rule 32
	'~0'           reduce using rule 32
	'~1'           reduce using rule 32
	'~i'           reduce using rule 32
	'~j'           reduce using rule 32
	'π'            reduce using rule 32
	'∘'            reduce using rule 32
	L_Id           reduce using rule 32
	L_Scalar       reduce using rule 32
	%eof           reduce using rule 32


State 81

	Expr3 -> '~i' .                                     (rule 36)

	'$'            reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'-i'           reduce using rule 36
	';'            reduce using rule 36
	'@'            reduce using rule 36
	'e'            reduce using rule 36
	'else'         reduce using rule 36
	'i'            reduce using rule 36
	'pi'           reduce using rule 36
	'then'         reduce using rule 36
	'}'            reduce using rule 36
	'~+'           reduce using rule 36
	'~-'           reduce using rule 36
	'~0'           reduce using rule 36
	'~1'           reduce using rule 36
	'~i'           reduce using rule 36
	'~j'           reduce using rule 36
	'π'            reduce using rule 36
	'∘'            reduce using rule 36
	L_Id           reduce using rule 36
	L_Scalar       reduce using rule 36
	%eof           reduce using rule 36


State 82

	Expr3 -> '~j' .                                     (rule 37)

	'$'            reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'-i'           reduce using rule 37
	';'            reduce using rule 37
	'@'            reduce using rule 37
	'e'            reduce using rule 37
	'else'         reduce using rule 37
	'i'            reduce using rule 37
	'pi'           reduce using rule 37
	'then'         reduce using rule 37
	'}'            reduce using rule 37
	'~+'           reduce using rule 37
	'~-'           reduce using rule 37
	'~0'           reduce using rule 37
	'~1'           reduce using rule 37
	'~i'           reduce using rule 37
	'~j'           reduce using rule 37
	'π'            reduce using rule 37
	'∘'            reduce using rule 37
	L_Id           reduce using rule 37
	L_Scalar       reduce using rule 37
	%eof           reduce using rule 37


State 83

	Expr1 -> 'λ' . ListId '.' Expr                      (rule 52)

	L_Id           shift, and enter state 23

	Id             goto state 24
	ListId         goto state 100

State 84

	%start_pExpr -> Expr .                              (rule 7)

	%eof           accept


State 85

	%start_pExpr1 -> Expr1 .                            (rule 6)

	%eof           accept


State 86

	%start_pExpr2 -> Expr2 .                            (rule 5)
	Expr2 -> Expr2 . Expr3                              (rule 41)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57
	%eof           accept

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 99
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 87

	%start_pExpr3 -> Expr3 .                            (rule 4)

	%eof           accept


State 88

	%start_pListPattern -> ListPattern .                (rule 3)

	%eof           accept


State 89

	ListPattern -> Pattern . ListPattern                (rule 30)

	'('            shift, and enter state 46
	':'            reduce using rule 29
	':='           reduce using rule 29
	L_Id           shift, and enter state 23
	%eof           reduce using rule 29

	Id             goto state 40
	ListPattern    goto state 98
	Pattern        goto state 89
	PatternVar     goto state 45

State 90

	Toplevel -> Id . ListPattern ':=' Expr              (rule 27)
	Toplevel -> Id . ListPattern ':' Type ':=' Expr     (rule 28)

	'('            shift, and enter state 46
	':'            reduce using rule 29
	':='           reduce using rule 29
	L_Id           shift, and enter state 23

	Id             goto state 40
	ListPattern    goto state 97
	Pattern        goto state 89
	PatternVar     goto state 45

State 91

	%start_pToplevel -> Toplevel .                      (rule 2)

	%eof           accept


State 92

	%start_pListToplevel -> ListToplevel .              (rule 1)

	%eof           accept


State 93

	ListToplevel -> Toplevel . ';' ListToplevel         (rule 26)

	';'            shift, and enter state 96


State 94

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 95

	Program -> ListToplevel .                           (rule 24)

	%eof           reduce using rule 24


State 96

	ListToplevel -> Toplevel ';' . ListToplevel         (rule 26)

	L_Id           shift, and enter state 23
	%eof           reduce using rule 25

	Id             goto state 90
	ListToplevel   goto state 164
	Toplevel       goto state 93

State 97

	Toplevel -> Id ListPattern . ':=' Expr              (rule 27)
	Toplevel -> Id ListPattern . ':' Type ':=' Expr     (rule 28)

	':'            shift, and enter state 162
	':='           shift, and enter state 163


State 98

	ListPattern -> Pattern ListPattern .                (rule 30)

	':'            reduce using rule 30
	':='           reduce using rule 30
	%eof           reduce using rule 30


State 99

	Expr2 -> Expr2 Expr3 .                              (rule 41)

	'$'            reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'-i'           reduce using rule 41
	';'            reduce using rule 41
	'@'            reduce using rule 41
	'e'            reduce using rule 41
	'else'         reduce using rule 41
	'i'            reduce using rule 41
	'pi'           reduce using rule 41
	'then'         reduce using rule 41
	'}'            reduce using rule 41
	'~+'           reduce using rule 41
	'~-'           reduce using rule 41
	'~0'           reduce using rule 41
	'~1'           reduce using rule 41
	'~i'           reduce using rule 41
	'~j'           reduce using rule 41
	'π'            reduce using rule 41
	'∘'            reduce using rule 41
	L_Id           reduce using rule 41
	L_Scalar       reduce using rule 41
	%eof           reduce using rule 41


State 100

	Expr1 -> 'λ' ListId . '.' Expr                      (rule 52)

	'.'            shift, and enter state 161


State 101

	Expr1 -> 'let' '{' . ListLet '}' 'in' Expr          (rule 51)

	'('            shift, and enter state 46
	L_Id           shift, and enter state 23

	Id             goto state 40
	Let            goto state 60
	ListLet        goto state 160
	Pattern        goto state 62
	PatternVar     goto state 45

State 102

	Expr1 -> 'if°' Expr . 'then' Expr 'else' Expr       (rule 48)

	'then'         shift, and enter state 159


State 103

	Expr1 -> 'if*' Expr . 'then' Expr 'else' Expr       (rule 49)

	'then'         shift, and enter state 158


State 104

	Expr1 -> 'if' Expr . 'then' Expr 'else' Expr        (rule 50)

	'then'         shift, and enter state 157


State 105

	Expr1 -> '\\' ListId . '.' Expr                     (rule 53)

	'.'            shift, and enter state 156


State 106

	Expr3 -> '(' Expr . ')'                             (rule 40)
	ListExpr -> Expr .                                  (rule 57)
	ListExpr -> Expr . ',' ListExpr                     (rule 58)

	')'            shift, and enter state 155
			(reduce using rule 57)

	','            shift, and enter state 110


State 107

	Expr3 -> '(' ListExpr . ')'                         (rule 38)

	')'            shift, and enter state 154


State 108

	Expr3 -> Complex . '*' Expr3                        (rule 39)
	Complex2 -> '(' Complex . ')'                       (rule 71)

	')'            shift, and enter state 144
	'*'            shift, and enter state 109


State 109

	Expr3 -> Complex '*' . Expr3                        (rule 39)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 153
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 110

	ListExpr -> Expr ',' . ListExpr                     (rule 58)

	'('            shift, and enter state 71
	')'            reduce using rule 56
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57
	%eof           reduce using rule 56

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 68
	ListExpr       goto state 152
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 111

	Expr1 -> Expr2 '$' . Expr1                          (rule 45)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 151
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 112

	Expr1 -> Expr2 '+' . Expr1                          (rule 43)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 150
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 113

	Expr1 -> Expr2 '-' . Expr1                          (rule 44)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 149
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 114

	Expr1 -> Expr2 '@' . Expr1                          (rule 47)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 148
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 115

	Expr1 -> Expr2 '∘' . Expr1                          (rule 46)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 147
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 116

	Let -> Pattern '=' . Expr                           (rule 59)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 146
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 117

	ListLet -> Let ';' . ListLet                        (rule 61)

	'('            shift, and enter state 46
	L_Id           shift, and enter state 23

	Id             goto state 40
	Let            goto state 60
	ListLet        goto state 145
	Pattern        goto state 62
	PatternVar     goto state 45

State 118

	Complex2 -> '(' Complex . ')'                       (rule 71)

	')'            shift, and enter state 144


State 119

	Complex1 -> Complex2 Complex1 .                     (rule 74)

	')'            reduce using rule 74
	'*'            reduce using rule 74
	%eof           reduce using rule 74


State 120

	Complex1 -> Complex2 '/' . Complex1                 (rule 73)

	'('            shift, and enter state 51
	'-i'           shift, and enter state 52
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'pi'           shift, and enter state 55
	'π'            shift, and enter state 56
	L_Scalar       shift, and enter state 57

	Scalar         goto state 47
	Complex2       goto state 48
	Complex1       goto state 143

State 121

	Complex1 -> Complex2 '^' . Complex1                 (rule 72)

	'('            shift, and enter state 51
	'-i'           shift, and enter state 52
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'pi'           shift, and enter state 55
	'π'            shift, and enter state 56
	L_Scalar       shift, and enter state 57

	Scalar         goto state 47
	Complex2       goto state 48
	Complex1       goto state 142

State 122

	Complex2 -> Scalar '+' . Scalar 'i'                 (rule 62)

	L_Scalar       shift, and enter state 57

	Scalar         goto state 141

State 123

	Complex2 -> Scalar '-' . Scalar 'i'                 (rule 63)

	L_Scalar       shift, and enter state 57

	Scalar         goto state 140

State 124

	Complex2 -> Scalar 'i' .                            (rule 65)

	'('            reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'-i'           reduce using rule 65
	'/'            reduce using rule 65
	'^'            reduce using rule 65
	'e'            reduce using rule 65
	'i'            reduce using rule 65
	'pi'           reduce using rule 65
	'π'            reduce using rule 65
	L_Scalar       reduce using rule 65
	%eof           reduce using rule 65


State 125

	Pattern -> '(' ListPatternVar . ')'                 (rule 78)

	')'            shift, and enter state 139


State 126

	ListPatternVar -> PatternVar ',' . ListPatternVar    (rule 82)

	')'            reduce using rule 80
	L_Id           shift, and enter state 23
	%eof           reduce using rule 80

	Id             goto state 40
	PatternVar     goto state 41
	ListPatternVar goto state 138

State 127

	Type -> '∀' ListId . '.' Mono                       (rule 93)

	'.'            shift, and enter state 137


State 128

	Type -> 'forall' ListId . '.' Mono                  (rule 94)

	'.'            shift, and enter state 136


State 129

	Mono2 -> '(' Mono . ')'                             (rule 87)

	')'            shift, and enter state 135


State 130

	Mono1 -> Mono2 '*' . Mono1                          (rule 88)

	'('            shift, and enter state 31
	'qubit'        shift, and enter state 33
	'unit'         shift, and enter state 34
	'⊤'            shift, and enter state 36
	L_Id           shift, and enter state 23

	Id             goto state 26
	Mono2          goto state 27
	Mono1          goto state 134

State 131

	Mono1 -> Mono2 '->' . Mono1                         (rule 89)

	'('            shift, and enter state 31
	'qubit'        shift, and enter state 33
	'unit'         shift, and enter state 34
	'⊤'            shift, and enter state 36
	L_Id           shift, and enter state 23

	Id             goto state 26
	Mono2          goto state 27
	Mono1          goto state 133

State 132

	ListId -> Id ListId .                               (rule 96)

	'.'            reduce using rule 96
	%eof           reduce using rule 96


State 133

	Mono1 -> Mono2 '->' Mono1 .                         (rule 89)

	')'            reduce using rule 89
	':='           reduce using rule 89
	%eof           reduce using rule 89


State 134

	Mono1 -> Mono2 '*' Mono1 .                          (rule 88)

	')'            reduce using rule 88
	':='           reduce using rule 88
	%eof           reduce using rule 88


State 135

	Mono2 -> '(' Mono ')' .                             (rule 87)

	')'            reduce using rule 87
	'*'            reduce using rule 87
	'->'           reduce using rule 87
	':='           reduce using rule 87
	%eof           reduce using rule 87


State 136

	Type -> 'forall' ListId '.' . Mono                  (rule 94)

	'('            shift, and enter state 31
	'qubit'        shift, and enter state 33
	'unit'         shift, and enter state 34
	'⊤'            shift, and enter state 36
	L_Id           shift, and enter state 23

	Id             goto state 26
	Mono2          goto state 27
	Mono1          goto state 28
	Mono           goto state 176

State 137

	Type -> '∀' ListId '.' . Mono                       (rule 93)

	'('            shift, and enter state 31
	'qubit'        shift, and enter state 33
	'unit'         shift, and enter state 34
	'⊤'            shift, and enter state 36
	L_Id           shift, and enter state 23

	Id             goto state 26
	Mono2          goto state 27
	Mono1          goto state 28
	Mono           goto state 175

State 138

	ListPatternVar -> PatternVar ',' ListPatternVar .    (rule 82)

	')'            reduce using rule 82
	%eof           reduce using rule 82


State 139

	Pattern -> '(' ListPatternVar ')' .                 (rule 78)

	'('            reduce using rule 78
	':'            reduce using rule 78
	':='           reduce using rule 78
	'='            reduce using rule 78
	L_Id           reduce using rule 78
	%eof           reduce using rule 78


State 140

	Complex2 -> Scalar '-' Scalar . 'i'                 (rule 63)

	'i'            shift, and enter state 174


State 141

	Complex2 -> Scalar '+' Scalar . 'i'                 (rule 62)

	'i'            shift, and enter state 173


State 142

	Complex1 -> Complex2 '^' Complex1 .                 (rule 72)

	')'            reduce using rule 72
	'*'            reduce using rule 72
	%eof           reduce using rule 72


State 143

	Complex1 -> Complex2 '/' Complex1 .                 (rule 73)

	')'            reduce using rule 73
	'*'            reduce using rule 73
	%eof           reduce using rule 73


State 144

	Complex2 -> '(' Complex ')' .                       (rule 71)

	'('            reduce using rule 71
	')'            reduce using rule 71
	'*'            reduce using rule 71
	'-i'           reduce using rule 71
	'/'            reduce using rule 71
	'^'            reduce using rule 71
	'e'            reduce using rule 71
	'i'            reduce using rule 71
	'pi'           reduce using rule 71
	'π'            reduce using rule 71
	L_Scalar       reduce using rule 71
	%eof           reduce using rule 71


State 145

	ListLet -> Let ';' ListLet .                        (rule 61)

	'}'            reduce using rule 61
	%eof           reduce using rule 61


State 146

	Let -> Pattern '=' Expr .                           (rule 59)

	';'            reduce using rule 59
	'}'            reduce using rule 59
	%eof           reduce using rule 59


State 147

	Expr1 -> Expr2 '∘' Expr1 .                          (rule 46)

	')'            reduce using rule 46
	','            reduce using rule 46
	';'            reduce using rule 46
	'else'         reduce using rule 46
	'then'         reduce using rule 46
	'}'            reduce using rule 46
	%eof           reduce using rule 46


State 148

	Expr1 -> Expr2 '@' Expr1 .                          (rule 47)

	')'            reduce using rule 47
	','            reduce using rule 47
	';'            reduce using rule 47
	'else'         reduce using rule 47
	'then'         reduce using rule 47
	'}'            reduce using rule 47
	%eof           reduce using rule 47


State 149

	Expr1 -> Expr2 '-' Expr1 .                          (rule 44)

	')'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44
	'else'         reduce using rule 44
	'then'         reduce using rule 44
	'}'            reduce using rule 44
	%eof           reduce using rule 44


State 150

	Expr1 -> Expr2 '+' Expr1 .                          (rule 43)

	')'            reduce using rule 43
	','            reduce using rule 43
	';'            reduce using rule 43
	'else'         reduce using rule 43
	'then'         reduce using rule 43
	'}'            reduce using rule 43
	%eof           reduce using rule 43


State 151

	Expr1 -> Expr2 '$' Expr1 .                          (rule 45)

	')'            reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45
	'else'         reduce using rule 45
	'then'         reduce using rule 45
	'}'            reduce using rule 45
	%eof           reduce using rule 45


State 152

	ListExpr -> Expr ',' ListExpr .                     (rule 58)

	')'            reduce using rule 58
	%eof           reduce using rule 58


State 153

	Expr3 -> Complex '*' Expr3 .                        (rule 39)

	'$'            reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'-i'           reduce using rule 39
	';'            reduce using rule 39
	'@'            reduce using rule 39
	'e'            reduce using rule 39
	'else'         reduce using rule 39
	'i'            reduce using rule 39
	'pi'           reduce using rule 39
	'then'         reduce using rule 39
	'}'            reduce using rule 39
	'~+'           reduce using rule 39
	'~-'           reduce using rule 39
	'~0'           reduce using rule 39
	'~1'           reduce using rule 39
	'~i'           reduce using rule 39
	'~j'           reduce using rule 39
	'π'            reduce using rule 39
	'∘'            reduce using rule 39
	L_Id           reduce using rule 39
	L_Scalar       reduce using rule 39
	%eof           reduce using rule 39


State 154

	Expr3 -> '(' ListExpr ')' .                         (rule 38)

	'$'            reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'-i'           reduce using rule 38
	';'            reduce using rule 38
	'@'            reduce using rule 38
	'e'            reduce using rule 38
	'else'         reduce using rule 38
	'i'            reduce using rule 38
	'pi'           reduce using rule 38
	'then'         reduce using rule 38
	'}'            reduce using rule 38
	'~+'           reduce using rule 38
	'~-'           reduce using rule 38
	'~0'           reduce using rule 38
	'~1'           reduce using rule 38
	'~i'           reduce using rule 38
	'~j'           reduce using rule 38
	'π'            reduce using rule 38
	'∘'            reduce using rule 38
	L_Id           reduce using rule 38
	L_Scalar       reduce using rule 38
	%eof           reduce using rule 38


State 155

	Expr3 -> '(' Expr ')' .                             (rule 40)

	'$'            reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'-i'           reduce using rule 40
	';'            reduce using rule 40
	'@'            reduce using rule 40
	'e'            reduce using rule 40
	'else'         reduce using rule 40
	'i'            reduce using rule 40
	'pi'           reduce using rule 40
	'then'         reduce using rule 40
	'}'            reduce using rule 40
	'~+'           reduce using rule 40
	'~-'           reduce using rule 40
	'~0'           reduce using rule 40
	'~1'           reduce using rule 40
	'~i'           reduce using rule 40
	'~j'           reduce using rule 40
	'π'            reduce using rule 40
	'∘'            reduce using rule 40
	L_Id           reduce using rule 40
	L_Scalar       reduce using rule 40
	%eof           reduce using rule 40


State 156

	Expr1 -> '\\' ListId '.' . Expr                     (rule 53)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 172
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 157

	Expr1 -> 'if' Expr 'then' . Expr 'else' Expr        (rule 50)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 171
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 158

	Expr1 -> 'if*' Expr 'then' . Expr 'else' Expr       (rule 49)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 170
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 159

	Expr1 -> 'if°' Expr 'then' . Expr 'else' Expr       (rule 48)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 169
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 160

	Expr1 -> 'let' '{' ListLet . '}' 'in' Expr          (rule 51)

	'}'            shift, and enter state 168


State 161

	Expr1 -> 'λ' ListId '.' . Expr                      (rule 52)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 167
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 162

	Toplevel -> Id ListPattern ':' . Type ':=' Expr     (rule 28)

	'('            shift, and enter state 31
	'forall'       shift, and enter state 32
	'qubit'        shift, and enter state 33
	'unit'         shift, and enter state 34
	'∀'            shift, and enter state 35
	'⊤'            shift, and enter state 36
	L_Id           shift, and enter state 23

	Id             goto state 26
	Mono2          goto state 27
	Mono1          goto state 28
	Mono           goto state 29
	Type           goto state 166

State 163

	Toplevel -> Id ListPattern ':=' . Expr              (rule 27)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 165
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 164

	ListToplevel -> Toplevel ';' ListToplevel .         (rule 26)

	%eof           reduce using rule 26


State 165

	Toplevel -> Id ListPattern ':=' Expr .              (rule 27)

	';'            reduce using rule 27
	%eof           reduce using rule 27


State 166

	Toplevel -> Id ListPattern ':' Type . ':=' Expr     (rule 28)

	':='           shift, and enter state 181


State 167

	Expr1 -> 'λ' ListId '.' Expr .                      (rule 52)

	')'            reduce using rule 52
	','            reduce using rule 52
	';'            reduce using rule 52
	'else'         reduce using rule 52
	'then'         reduce using rule 52
	'}'            reduce using rule 52
	%eof           reduce using rule 52


State 168

	Expr1 -> 'let' '{' ListLet '}' . 'in' Expr          (rule 51)

	'in'           shift, and enter state 180


State 169

	Expr1 -> 'if°' Expr 'then' Expr . 'else' Expr       (rule 48)

	'else'         shift, and enter state 179


State 170

	Expr1 -> 'if*' Expr 'then' Expr . 'else' Expr       (rule 49)

	'else'         shift, and enter state 178


State 171

	Expr1 -> 'if' Expr 'then' Expr . 'else' Expr        (rule 50)

	'else'         shift, and enter state 177


State 172

	Expr1 -> '\\' ListId '.' Expr .                     (rule 53)

	')'            reduce using rule 53
	','            reduce using rule 53
	';'            reduce using rule 53
	'else'         reduce using rule 53
	'then'         reduce using rule 53
	'}'            reduce using rule 53
	%eof           reduce using rule 53


State 173

	Complex2 -> Scalar '+' Scalar 'i' .                 (rule 62)

	'('            reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'-i'           reduce using rule 62
	'/'            reduce using rule 62
	'^'            reduce using rule 62
	'e'            reduce using rule 62
	'i'            reduce using rule 62
	'pi'           reduce using rule 62
	'π'            reduce using rule 62
	L_Scalar       reduce using rule 62
	%eof           reduce using rule 62


State 174

	Complex2 -> Scalar '-' Scalar 'i' .                 (rule 63)

	'('            reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'-i'           reduce using rule 63
	'/'            reduce using rule 63
	'^'            reduce using rule 63
	'e'            reduce using rule 63
	'i'            reduce using rule 63
	'pi'           reduce using rule 63
	'π'            reduce using rule 63
	L_Scalar       reduce using rule 63
	%eof           reduce using rule 63


State 175

	Type -> '∀' ListId '.' Mono .                       (rule 93)

	':='           reduce using rule 93
	%eof           reduce using rule 93


State 176

	Type -> 'forall' ListId '.' Mono .                  (rule 94)

	':='           reduce using rule 94
	%eof           reduce using rule 94


State 177

	Expr1 -> 'if' Expr 'then' Expr 'else' . Expr        (rule 50)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 186
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 178

	Expr1 -> 'if*' Expr 'then' Expr 'else' . Expr       (rule 49)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 185
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 179

	Expr1 -> 'if°' Expr 'then' Expr 'else' . Expr       (rule 48)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 184
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 180

	Expr1 -> 'let' '{' ListLet '}' 'in' . Expr          (rule 51)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 183
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 181

	Toplevel -> Id ListPattern ':' Type ':=' . Expr     (rule 28)

	'('            shift, and enter state 71
	'-i'           shift, and enter state 52
	'\\'           shift, and enter state 72
	'e'            shift, and enter state 53
	'i'            shift, and enter state 54
	'if'           shift, and enter state 73
	'if*'          shift, and enter state 74
	'if°'          shift, and enter state 75
	'let'          shift, and enter state 76
	'pi'           shift, and enter state 55
	'~+'           shift, and enter state 77
	'~-'           shift, and enter state 78
	'~0'           shift, and enter state 79
	'~1'           shift, and enter state 80
	'~i'           shift, and enter state 81
	'~j'           shift, and enter state 82
	'λ'            shift, and enter state 83
	'π'            shift, and enter state 56
	L_Id           shift, and enter state 23
	L_Scalar       shift, and enter state 57

	Id             goto state 64
	Scalar         goto state 47
	Expr3          goto state 65
	Expr2          goto state 66
	Expr1          goto state 67
	Expr           goto state 182
	Complex2       goto state 48
	Complex1       goto state 49
	Complex        goto state 70

State 182

	Toplevel -> Id ListPattern ':' Type ':=' Expr .     (rule 28)

	';'            reduce using rule 28
	%eof           reduce using rule 28


State 183

	Expr1 -> 'let' '{' ListLet '}' 'in' Expr .          (rule 51)

	')'            reduce using rule 51
	','            reduce using rule 51
	';'            reduce using rule 51
	'else'         reduce using rule 51
	'then'         reduce using rule 51
	'}'            reduce using rule 51
	%eof           reduce using rule 51


State 184

	Expr1 -> 'if°' Expr 'then' Expr 'else' Expr .       (rule 48)

	')'            reduce using rule 48
	','            reduce using rule 48
	';'            reduce using rule 48
	'else'         reduce using rule 48
	'then'         reduce using rule 48
	'}'            reduce using rule 48
	%eof           reduce using rule 48


State 185

	Expr1 -> 'if*' Expr 'then' Expr 'else' Expr .       (rule 49)

	')'            reduce using rule 49
	','            reduce using rule 49
	';'            reduce using rule 49
	'else'         reduce using rule 49
	'then'         reduce using rule 49
	'}'            reduce using rule 49
	%eof           reduce using rule 49


State 186

	Expr1 -> 'if' Expr 'then' Expr 'else' Expr .        (rule 50)

	')'            reduce using rule 50
	','            reduce using rule 50
	';'            reduce using rule 50
	'else'         reduce using rule 50
	'then'         reduce using rule 50
	'}'            reduce using rule 50
	%eof           reduce using rule 50


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 97
Number of terminals: 46
Number of non-terminals: 46
Number of states: 187
