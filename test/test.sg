--H q : qubit -> qubit
-- := if° q
--       then ~-
--       else ~+

--X q : qubit -> qubit
--  := if° q
--       then ~0
--       else ~1

--CX c t : qubit -> qubit -> qubit * qubit
-- := if° c
--      then (~1, (λx.if° x then ~0 else ~1) t)
--      else (~0, t)

--share q : qubit -> qubit * qubit
-- := (q,q)

meas q : qubit -> qubit
 := let (x,y) = (\t . (t,t)) q in x

