--H q : qubit -> qubit
-- := if° q
--       then ~-
--       else ~+

--X q : qubit -> qubit
--  := if° q
--       then ~0
--       else ~1


-- Deutsch oracle
--   := let (x,_) = oracle (~+, ~-)
--          h     = if◦x then ~- else ~+
--          (r,_) = (h,h)
--            in r

-- deutsch : ((QBit >< QBit) -o (QBit >< QBit)) -o !Bit
-- deutsch oracle = 
--     let (x,y) = oracle (H (new 0), H (new 1)) 
--         in measure (H x)

-- balanced : (QBit >< QBit) -o (QBit >< QBit)
-- balanced qs = let (x,y) = qs in
--                 let (x,y) = CNOT (X x, y)
--                     in (X x, y)


-- main 
--  := let (x,y) = if° ~+ then (~1, -1 * ~-) else (~0, ~-) 
--       in (\q. if° q then ~- else ~+) x 

main := (~1, ~1)
